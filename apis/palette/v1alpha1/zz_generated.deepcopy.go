//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AKSCluster) DeepCopyInto(out *AKSCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AKSCluster.
func (in *AKSCluster) DeepCopy() *AKSCluster {
	if in == nil {
		return nil
	}
	out := new(AKSCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AKSCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AKSClusterInitParameters) DeepCopyInto(out *AKSClusterInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]BackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]CloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]ClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]ClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]HostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]MachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]NamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]ScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AKSClusterInitParameters.
func (in *AKSClusterInitParameters) DeepCopy() *AKSClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(AKSClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AKSClusterList) DeepCopyInto(out *AKSClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AKSCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AKSClusterList.
func (in *AKSClusterList) DeepCopy() *AKSClusterList {
	if in == nil {
		return nil
	}
	out := new(AKSClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AKSClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AKSClusterObservation) DeepCopyInto(out *AKSClusterObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]BackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]CloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]ClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]ClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]HostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]LocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]MachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]NamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]ScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AKSClusterObservation.
func (in *AKSClusterObservation) DeepCopy() *AKSClusterObservation {
	if in == nil {
		return nil
	}
	out := new(AKSClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AKSClusterParameters) DeepCopyInto(out *AKSClusterParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]BackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]CloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]ClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]ClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]HostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]MachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]NamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]ScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AKSClusterParameters.
func (in *AKSClusterParameters) DeepCopy() *AKSClusterParameters {
	if in == nil {
		return nil
	}
	out := new(AKSClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AKSClusterSpec) DeepCopyInto(out *AKSClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AKSClusterSpec.
func (in *AKSClusterSpec) DeepCopy() *AKSClusterSpec {
	if in == nil {
		return nil
	}
	out := new(AKSClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AKSClusterStatus) DeepCopyInto(out *AKSClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AKSClusterStatus.
func (in *AKSClusterStatus) DeepCopy() *AKSClusterStatus {
	if in == nil {
		return nil
	}
	out := new(AKSClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSCloudAccount) DeepCopyInto(out *AWSCloudAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSCloudAccount.
func (in *AWSCloudAccount) DeepCopy() *AWSCloudAccount {
	if in == nil {
		return nil
	}
	out := new(AWSCloudAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AWSCloudAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSCloudAccountInitParameters) DeepCopyInto(out *AWSCloudAccountInitParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AwsAccessKey != nil {
		in, out := &in.AwsAccessKey, &out.AwsAccessKey
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretKeySecretRef != nil {
		in, out := &in.AwsSecretKeySecretRef, &out.AwsSecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ExternalIDSecretRef != nil {
		in, out := &in.ExternalIDSecretRef, &out.ExternalIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.PolicyArns != nil {
		in, out := &in.PolicyArns, &out.PolicyArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSCloudAccountInitParameters.
func (in *AWSCloudAccountInitParameters) DeepCopy() *AWSCloudAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AWSCloudAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSCloudAccountList) DeepCopyInto(out *AWSCloudAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AWSCloudAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSCloudAccountList.
func (in *AWSCloudAccountList) DeepCopy() *AWSCloudAccountList {
	if in == nil {
		return nil
	}
	out := new(AWSCloudAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AWSCloudAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSCloudAccountObservation) DeepCopyInto(out *AWSCloudAccountObservation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AwsAccessKey != nil {
		in, out := &in.AwsAccessKey, &out.AwsAccessKey
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.PolicyArns != nil {
		in, out := &in.PolicyArns, &out.PolicyArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSCloudAccountObservation.
func (in *AWSCloudAccountObservation) DeepCopy() *AWSCloudAccountObservation {
	if in == nil {
		return nil
	}
	out := new(AWSCloudAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSCloudAccountParameters) DeepCopyInto(out *AWSCloudAccountParameters) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AwsAccessKey != nil {
		in, out := &in.AwsAccessKey, &out.AwsAccessKey
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretKeySecretRef != nil {
		in, out := &in.AwsSecretKeySecretRef, &out.AwsSecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ExternalIDSecretRef != nil {
		in, out := &in.ExternalIDSecretRef, &out.ExternalIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partition != nil {
		in, out := &in.Partition, &out.Partition
		*out = new(string)
		**out = **in
	}
	if in.PolicyArns != nil {
		in, out := &in.PolicyArns, &out.PolicyArns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSCloudAccountParameters.
func (in *AWSCloudAccountParameters) DeepCopy() *AWSCloudAccountParameters {
	if in == nil {
		return nil
	}
	out := new(AWSCloudAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSCloudAccountSpec) DeepCopyInto(out *AWSCloudAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSCloudAccountSpec.
func (in *AWSCloudAccountSpec) DeepCopy() *AWSCloudAccountSpec {
	if in == nil {
		return nil
	}
	out := new(AWSCloudAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSCloudAccountStatus) DeepCopyInto(out *AWSCloudAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSCloudAccountStatus.
func (in *AWSCloudAccountStatus) DeepCopy() *AWSCloudAccountStatus {
	if in == nil {
		return nil
	}
	out := new(AWSCloudAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudAccount) DeepCopyInto(out *AzureCloudAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudAccount.
func (in *AzureCloudAccount) DeepCopy() *AzureCloudAccount {
	if in == nil {
		return nil
	}
	out := new(AzureCloudAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureCloudAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudAccountInitParameters) DeepCopyInto(out *AzureCloudAccountInitParameters) {
	*out = *in
	if in.AzureClientID != nil {
		in, out := &in.AzureClientID, &out.AzureClientID
		*out = new(string)
		**out = **in
	}
	out.AzureClientSecretSecretRef = in.AzureClientSecretSecretRef
	if in.AzureTenantID != nil {
		in, out := &in.AzureTenantID, &out.AzureTenantID
		*out = new(string)
		**out = **in
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.DisablePropertiesRequest != nil {
		in, out := &in.DisablePropertiesRequest, &out.DisablePropertiesRequest
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TenantName != nil {
		in, out := &in.TenantName, &out.TenantName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudAccountInitParameters.
func (in *AzureCloudAccountInitParameters) DeepCopy() *AzureCloudAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureCloudAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudAccountList) DeepCopyInto(out *AzureCloudAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AzureCloudAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudAccountList.
func (in *AzureCloudAccountList) DeepCopy() *AzureCloudAccountList {
	if in == nil {
		return nil
	}
	out := new(AzureCloudAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AzureCloudAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudAccountObservation) DeepCopyInto(out *AzureCloudAccountObservation) {
	*out = *in
	if in.AzureClientID != nil {
		in, out := &in.AzureClientID, &out.AzureClientID
		*out = new(string)
		**out = **in
	}
	if in.AzureTenantID != nil {
		in, out := &in.AzureTenantID, &out.AzureTenantID
		*out = new(string)
		**out = **in
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.DisablePropertiesRequest != nil {
		in, out := &in.DisablePropertiesRequest, &out.DisablePropertiesRequest
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TenantName != nil {
		in, out := &in.TenantName, &out.TenantName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudAccountObservation.
func (in *AzureCloudAccountObservation) DeepCopy() *AzureCloudAccountObservation {
	if in == nil {
		return nil
	}
	out := new(AzureCloudAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudAccountParameters) DeepCopyInto(out *AzureCloudAccountParameters) {
	*out = *in
	if in.AzureClientID != nil {
		in, out := &in.AzureClientID, &out.AzureClientID
		*out = new(string)
		**out = **in
	}
	out.AzureClientSecretSecretRef = in.AzureClientSecretSecretRef
	if in.AzureTenantID != nil {
		in, out := &in.AzureTenantID, &out.AzureTenantID
		*out = new(string)
		**out = **in
	}
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.DisablePropertiesRequest != nil {
		in, out := &in.DisablePropertiesRequest, &out.DisablePropertiesRequest
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.TenantName != nil {
		in, out := &in.TenantName, &out.TenantName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudAccountParameters.
func (in *AzureCloudAccountParameters) DeepCopy() *AzureCloudAccountParameters {
	if in == nil {
		return nil
	}
	out := new(AzureCloudAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudAccountSpec) DeepCopyInto(out *AzureCloudAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudAccountSpec.
func (in *AzureCloudAccountSpec) DeepCopy() *AzureCloudAccountSpec {
	if in == nil {
		return nil
	}
	out := new(AzureCloudAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudAccountStatus) DeepCopyInto(out *AzureCloudAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudAccountStatus.
func (in *AzureCloudAccountStatus) DeepCopy() *AzureCloudAccountStatus {
	if in == nil {
		return nil
	}
	out := new(AzureCloudAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureStorageConfigInitParameters) DeepCopyInto(out *AzureStorageConfigInitParameters) {
	*out = *in
	if in.AzureClientID != nil {
		in, out := &in.AzureClientID, &out.AzureClientID
		*out = new(string)
		**out = **in
	}
	out.AzureClientSecretSecretRef = in.AzureClientSecretSecretRef
	if in.AzureTenantID != nil {
		in, out := &in.AzureTenantID, &out.AzureTenantID
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.StockKeepingUnit != nil {
		in, out := &in.StockKeepingUnit, &out.StockKeepingUnit
		*out = new(string)
		**out = **in
	}
	if in.StorageName != nil {
		in, out := &in.StorageName, &out.StorageName
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureStorageConfigInitParameters.
func (in *AzureStorageConfigInitParameters) DeepCopy() *AzureStorageConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureStorageConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureStorageConfigObservation) DeepCopyInto(out *AzureStorageConfigObservation) {
	*out = *in
	if in.AzureClientID != nil {
		in, out := &in.AzureClientID, &out.AzureClientID
		*out = new(string)
		**out = **in
	}
	if in.AzureTenantID != nil {
		in, out := &in.AzureTenantID, &out.AzureTenantID
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.StockKeepingUnit != nil {
		in, out := &in.StockKeepingUnit, &out.StockKeepingUnit
		*out = new(string)
		**out = **in
	}
	if in.StorageName != nil {
		in, out := &in.StorageName, &out.StorageName
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureStorageConfigObservation.
func (in *AzureStorageConfigObservation) DeepCopy() *AzureStorageConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AzureStorageConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureStorageConfigParameters) DeepCopyInto(out *AzureStorageConfigParameters) {
	*out = *in
	if in.AzureClientID != nil {
		in, out := &in.AzureClientID, &out.AzureClientID
		*out = new(string)
		**out = **in
	}
	out.AzureClientSecretSecretRef = in.AzureClientSecretSecretRef
	if in.AzureTenantID != nil {
		in, out := &in.AzureTenantID, &out.AzureTenantID
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.StockKeepingUnit != nil {
		in, out := &in.StockKeepingUnit, &out.StockKeepingUnit
		*out = new(string)
		**out = **in
	}
	if in.StorageName != nil {
		in, out := &in.StorageName, &out.StorageName
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureStorageConfigParameters.
func (in *AzureStorageConfigParameters) DeepCopy() *AzureStorageConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AzureStorageConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyInitParameters) DeepCopyInto(out *BackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyInitParameters.
func (in *BackupPolicyInitParameters) DeepCopy() *BackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyObservation) DeepCopyInto(out *BackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyObservation.
func (in *BackupPolicyObservation) DeepCopy() *BackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupPolicyParameters) DeepCopyInto(out *BackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupPolicyParameters.
func (in *BackupPolicyParameters) DeepCopy() *BackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(BackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStorageLocation) DeepCopyInto(out *BackupStorageLocation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStorageLocation.
func (in *BackupStorageLocation) DeepCopy() *BackupStorageLocation {
	if in == nil {
		return nil
	}
	out := new(BackupStorageLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupStorageLocation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStorageLocationInitParameters) DeepCopyInto(out *BackupStorageLocationInitParameters) {
	*out = *in
	if in.AzureStorageConfig != nil {
		in, out := &in.AzureStorageConfig, &out.AzureStorageConfig
		*out = make([]AzureStorageConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CACert != nil {
		in, out := &in.CACert, &out.CACert
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.GCPStorageConfig != nil {
		in, out := &in.GCPStorageConfig, &out.GCPStorageConfig
		*out = make([]GCPStorageConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageProvider != nil {
		in, out := &in.StorageProvider, &out.StorageProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStorageLocationInitParameters.
func (in *BackupStorageLocationInitParameters) DeepCopy() *BackupStorageLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupStorageLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStorageLocationList) DeepCopyInto(out *BackupStorageLocationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackupStorageLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStorageLocationList.
func (in *BackupStorageLocationList) DeepCopy() *BackupStorageLocationList {
	if in == nil {
		return nil
	}
	out := new(BackupStorageLocationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupStorageLocationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStorageLocationObservation) DeepCopyInto(out *BackupStorageLocationObservation) {
	*out = *in
	if in.AzureStorageConfig != nil {
		in, out := &in.AzureStorageConfig, &out.AzureStorageConfig
		*out = make([]AzureStorageConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CACert != nil {
		in, out := &in.CACert, &out.CACert
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.GCPStorageConfig != nil {
		in, out := &in.GCPStorageConfig, &out.GCPStorageConfig
		*out = make([]GCPStorageConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageProvider != nil {
		in, out := &in.StorageProvider, &out.StorageProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStorageLocationObservation.
func (in *BackupStorageLocationObservation) DeepCopy() *BackupStorageLocationObservation {
	if in == nil {
		return nil
	}
	out := new(BackupStorageLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStorageLocationParameters) DeepCopyInto(out *BackupStorageLocationParameters) {
	*out = *in
	if in.AzureStorageConfig != nil {
		in, out := &in.AzureStorageConfig, &out.AzureStorageConfig
		*out = make([]AzureStorageConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CACert != nil {
		in, out := &in.CACert, &out.CACert
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.GCPStorageConfig != nil {
		in, out := &in.GCPStorageConfig, &out.GCPStorageConfig
		*out = make([]GCPStorageConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageProvider != nil {
		in, out := &in.StorageProvider, &out.StorageProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStorageLocationParameters.
func (in *BackupStorageLocationParameters) DeepCopy() *BackupStorageLocationParameters {
	if in == nil {
		return nil
	}
	out := new(BackupStorageLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStorageLocationSpec) DeepCopyInto(out *BackupStorageLocationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStorageLocationSpec.
func (in *BackupStorageLocationSpec) DeepCopy() *BackupStorageLocationSpec {
	if in == nil {
		return nil
	}
	out := new(BackupStorageLocationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStorageLocationStatus) DeepCopyInto(out *BackupStorageLocationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStorageLocationStatus.
func (in *BackupStorageLocationStatus) DeepCopy() *BackupStorageLocationStatus {
	if in == nil {
		return nil
	}
	out := new(BackupStorageLocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudConfigInitParameters) DeepCopyInto(out *CloudConfigInitParameters) {
	*out = *in
	if in.ControlPlaneCidr != nil {
		in, out := &in.ControlPlaneCidr, &out.ControlPlaneCidr
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetName != nil {
		in, out := &in.ControlPlaneSubnetName, &out.ControlPlaneSubnetName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetSecurityGroupName != nil {
		in, out := &in.ControlPlaneSubnetSecurityGroupName, &out.ControlPlaneSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.PrivateCluster != nil {
		in, out := &in.PrivateCluster, &out.PrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VnetCidrBlock != nil {
		in, out := &in.VnetCidrBlock, &out.VnetCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.WorkerCidr != nil {
		in, out := &in.WorkerCidr, &out.WorkerCidr
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetName != nil {
		in, out := &in.WorkerSubnetName, &out.WorkerSubnetName
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetSecurityGroupName != nil {
		in, out := &in.WorkerSubnetSecurityGroupName, &out.WorkerSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudConfigInitParameters.
func (in *CloudConfigInitParameters) DeepCopy() *CloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudConfigObservation) DeepCopyInto(out *CloudConfigObservation) {
	*out = *in
	if in.ControlPlaneCidr != nil {
		in, out := &in.ControlPlaneCidr, &out.ControlPlaneCidr
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetName != nil {
		in, out := &in.ControlPlaneSubnetName, &out.ControlPlaneSubnetName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetSecurityGroupName != nil {
		in, out := &in.ControlPlaneSubnetSecurityGroupName, &out.ControlPlaneSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.PrivateCluster != nil {
		in, out := &in.PrivateCluster, &out.PrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VnetCidrBlock != nil {
		in, out := &in.VnetCidrBlock, &out.VnetCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.WorkerCidr != nil {
		in, out := &in.WorkerCidr, &out.WorkerCidr
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetName != nil {
		in, out := &in.WorkerSubnetName, &out.WorkerSubnetName
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetSecurityGroupName != nil {
		in, out := &in.WorkerSubnetSecurityGroupName, &out.WorkerSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudConfigObservation.
func (in *CloudConfigObservation) DeepCopy() *CloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudConfigParameters) DeepCopyInto(out *CloudConfigParameters) {
	*out = *in
	if in.ControlPlaneCidr != nil {
		in, out := &in.ControlPlaneCidr, &out.ControlPlaneCidr
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetName != nil {
		in, out := &in.ControlPlaneSubnetName, &out.ControlPlaneSubnetName
		*out = new(string)
		**out = **in
	}
	if in.ControlPlaneSubnetSecurityGroupName != nil {
		in, out := &in.ControlPlaneSubnetSecurityGroupName, &out.ControlPlaneSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.PrivateCluster != nil {
		in, out := &in.PrivateCluster, &out.PrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.VnetCidrBlock != nil {
		in, out := &in.VnetCidrBlock, &out.VnetCidrBlock
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.WorkerCidr != nil {
		in, out := &in.WorkerCidr, &out.WorkerCidr
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetName != nil {
		in, out := &in.WorkerSubnetName, &out.WorkerSubnetName
		*out = new(string)
		**out = **in
	}
	if in.WorkerSubnetSecurityGroupName != nil {
		in, out := &in.WorkerSubnetSecurityGroupName, &out.WorkerSubnetSecurityGroupName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudConfigParameters.
func (in *CloudConfigParameters) DeepCopy() *CloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroup) DeepCopyInto(out *ClusterGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroup.
func (in *ClusterGroup) DeepCopy() *ClusterGroup {
	if in == nil {
		return nil
	}
	out := new(ClusterGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupClusterProfileInitParameters) DeepCopyInto(out *ClusterGroupClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterGroupClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupClusterProfileInitParameters.
func (in *ClusterGroupClusterProfileInitParameters) DeepCopy() *ClusterGroupClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupClusterProfileObservation) DeepCopyInto(out *ClusterGroupClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterGroupClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupClusterProfileObservation.
func (in *ClusterGroupClusterProfileObservation) DeepCopy() *ClusterGroupClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupClusterProfilePackInitParameters) DeepCopyInto(out *ClusterGroupClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupClusterProfilePackInitParameters.
func (in *ClusterGroupClusterProfilePackInitParameters) DeepCopy() *ClusterGroupClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupClusterProfilePackObservation) DeepCopyInto(out *ClusterGroupClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupClusterProfilePackObservation.
func (in *ClusterGroupClusterProfilePackObservation) DeepCopy() *ClusterGroupClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupClusterProfilePackParameters) DeepCopyInto(out *ClusterGroupClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupClusterProfilePackParameters.
func (in *ClusterGroupClusterProfilePackParameters) DeepCopy() *ClusterGroupClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupClusterProfileParameters) DeepCopyInto(out *ClusterGroupClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterGroupClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupClusterProfileParameters.
func (in *ClusterGroupClusterProfileParameters) DeepCopy() *ClusterGroupClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupInitParameters) DeepCopyInto(out *ClusterGroupInitParameters) {
	*out = *in
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]ClusterGroupClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClustersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupInitParameters.
func (in *ClusterGroupInitParameters) DeepCopy() *ClusterGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupList) DeepCopyInto(out *ClusterGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupList.
func (in *ClusterGroupList) DeepCopy() *ClusterGroupList {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupObservation) DeepCopyInto(out *ClusterGroupObservation) {
	*out = *in
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]ClusterGroupClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClustersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupObservation.
func (in *ClusterGroupObservation) DeepCopy() *ClusterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupParameters) DeepCopyInto(out *ClusterGroupParameters) {
	*out = *in
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]ClusterGroupClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClustersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupParameters.
func (in *ClusterGroupParameters) DeepCopy() *ClusterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupSpec) DeepCopyInto(out *ClusterGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupSpec.
func (in *ClusterGroupSpec) DeepCopy() *ClusterGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterGroupStatus) DeepCopyInto(out *ClusterGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterGroupStatus.
func (in *ClusterGroupStatus) DeepCopy() *ClusterGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfile) DeepCopyInto(out *ClusterProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfile.
func (in *ClusterProfile) DeepCopy() *ClusterProfile {
	if in == nil {
		return nil
	}
	out := new(ClusterProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileInitParameters) DeepCopyInto(out *ClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]PackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileInitParameters.
func (in *ClusterProfileInitParameters) DeepCopy() *ClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileInitParameters_2) DeepCopyInto(out *ClusterProfileInitParameters_2) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterProfilePackInitParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileVariables != nil {
		in, out := &in.ProfileVariables, &out.ProfileVariables
		*out = make([]ProfileVariablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileInitParameters_2.
func (in *ClusterProfileInitParameters_2) DeepCopy() *ClusterProfileInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileList) DeepCopyInto(out *ClusterProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileList.
func (in *ClusterProfileList) DeepCopy() *ClusterProfileList {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileObservation) DeepCopyInto(out *ClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]PackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileObservation.
func (in *ClusterProfileObservation) DeepCopy() *ClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileObservation_2) DeepCopyInto(out *ClusterProfileObservation_2) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterProfilePackObservation_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileVariables != nil {
		in, out := &in.ProfileVariables, &out.ProfileVariables
		*out = make([]ProfileVariablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileObservation_2.
func (in *ClusterProfileObservation_2) DeepCopy() *ClusterProfileObservation_2 {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackInitParameters) DeepCopyInto(out *ClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]PackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackInitParameters.
func (in *ClusterProfilePackInitParameters) DeepCopy() *ClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackInitParameters_2) DeepCopyInto(out *ClusterProfilePackInitParameters_2) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ClusterProfilePackManifestInitParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackInitParameters_2.
func (in *ClusterProfilePackInitParameters_2) DeepCopy() *ClusterProfilePackInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackManifestInitParameters) DeepCopyInto(out *ClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackManifestInitParameters.
func (in *ClusterProfilePackManifestInitParameters) DeepCopy() *ClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackManifestInitParameters_2) DeepCopyInto(out *ClusterProfilePackManifestInitParameters_2) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackManifestInitParameters_2.
func (in *ClusterProfilePackManifestInitParameters_2) DeepCopy() *ClusterProfilePackManifestInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackManifestInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackManifestObservation) DeepCopyInto(out *ClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackManifestObservation.
func (in *ClusterProfilePackManifestObservation) DeepCopy() *ClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackManifestObservation_2) DeepCopyInto(out *ClusterProfilePackManifestObservation_2) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackManifestObservation_2.
func (in *ClusterProfilePackManifestObservation_2) DeepCopy() *ClusterProfilePackManifestObservation_2 {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackManifestObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackManifestParameters) DeepCopyInto(out *ClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackManifestParameters.
func (in *ClusterProfilePackManifestParameters) DeepCopy() *ClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackManifestParameters_2) DeepCopyInto(out *ClusterProfilePackManifestParameters_2) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackManifestParameters_2.
func (in *ClusterProfilePackManifestParameters_2) DeepCopy() *ClusterProfilePackManifestParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackManifestParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackObservation) DeepCopyInto(out *ClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]PackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackObservation.
func (in *ClusterProfilePackObservation) DeepCopy() *ClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackObservation_2) DeepCopyInto(out *ClusterProfilePackObservation_2) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ClusterProfilePackManifestObservation_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackObservation_2.
func (in *ClusterProfilePackObservation_2) DeepCopy() *ClusterProfilePackObservation_2 {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackParameters) DeepCopyInto(out *ClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]PackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackParameters.
func (in *ClusterProfilePackParameters) DeepCopy() *ClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfilePackParameters_2) DeepCopyInto(out *ClusterProfilePackParameters_2) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ClusterProfilePackManifestParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfilePackParameters_2.
func (in *ClusterProfilePackParameters_2) DeepCopy() *ClusterProfilePackParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ClusterProfilePackParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileParameters) DeepCopyInto(out *ClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]PackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileParameters.
func (in *ClusterProfileParameters) DeepCopy() *ClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileParameters_2) DeepCopyInto(out *ClusterProfileParameters_2) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterProfilePackParameters_2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileVariables != nil {
		in, out := &in.ProfileVariables, &out.ProfileVariables
		*out = make([]ProfileVariablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileParameters_2.
func (in *ClusterProfileParameters_2) DeepCopy() *ClusterProfileParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileSpec) DeepCopyInto(out *ClusterProfileSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileSpec.
func (in *ClusterProfileSpec) DeepCopy() *ClusterProfileSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterProfileStatus) DeepCopyInto(out *ClusterProfileStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterProfileStatus.
func (in *ClusterProfileStatus) DeepCopy() *ClusterProfileStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingInitParameters) DeepCopyInto(out *ClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingInitParameters.
func (in *ClusterRbacBindingInitParameters) DeepCopy() *ClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingObservation) DeepCopyInto(out *ClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingObservation.
func (in *ClusterRbacBindingObservation) DeepCopy() *ClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingParameters) DeepCopyInto(out *ClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]SubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingParameters.
func (in *ClusterRbacBindingParameters) DeepCopy() *ClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *ClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingSubjectsInitParameters.
func (in *ClusterRbacBindingSubjectsInitParameters) DeepCopy() *ClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingSubjectsObservation) DeepCopyInto(out *ClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingSubjectsObservation.
func (in *ClusterRbacBindingSubjectsObservation) DeepCopy() *ClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRbacBindingSubjectsParameters) DeepCopyInto(out *ClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRbacBindingSubjectsParameters.
func (in *ClusterRbacBindingSubjectsParameters) DeepCopy() *ClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClustersInitParameters) DeepCopyInto(out *ClustersInitParameters) {
	*out = *in
	if in.ClusterUID != nil {
		in, out := &in.ClusterUID, &out.ClusterUID
		*out = new(string)
		**out = **in
	}
	if in.HostDNS != nil {
		in, out := &in.HostDNS, &out.HostDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClustersInitParameters.
func (in *ClustersInitParameters) DeepCopy() *ClustersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClustersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClustersObservation) DeepCopyInto(out *ClustersObservation) {
	*out = *in
	if in.ClusterUID != nil {
		in, out := &in.ClusterUID, &out.ClusterUID
		*out = new(string)
		**out = **in
	}
	if in.HostDNS != nil {
		in, out := &in.HostDNS, &out.HostDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClustersObservation.
func (in *ClustersObservation) DeepCopy() *ClustersObservation {
	if in == nil {
		return nil
	}
	out := new(ClustersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClustersParameters) DeepCopyInto(out *ClustersParameters) {
	*out = *in
	if in.ClusterUID != nil {
		in, out := &in.ClusterUID, &out.ClusterUID
		*out = new(string)
		**out = **in
	}
	if in.HostDNS != nil {
		in, out := &in.HostDNS, &out.HostDNS
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClustersParameters.
func (in *ClustersParameters) DeepCopy() *ClustersParameters {
	if in == nil {
		return nil
	}
	out := new(ClustersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.CPUMillicore != nil {
		in, out := &in.CPUMillicore, &out.CPUMillicore
		*out = new(float64)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.K8SDistribution != nil {
		in, out := &in.K8SDistribution, &out.K8SDistribution
		*out = new(string)
		**out = **in
	}
	if in.MemoryInMb != nil {
		in, out := &in.MemoryInMb, &out.MemoryInMb
		*out = new(float64)
		**out = **in
	}
	if in.OversubscriptionPercent != nil {
		in, out := &in.OversubscriptionPercent, &out.OversubscriptionPercent
		*out = new(float64)
		**out = **in
	}
	if in.StorageInGb != nil {
		in, out := &in.StorageInGb, &out.StorageInGb
		*out = new(float64)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.CPUMillicore != nil {
		in, out := &in.CPUMillicore, &out.CPUMillicore
		*out = new(float64)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.K8SDistribution != nil {
		in, out := &in.K8SDistribution, &out.K8SDistribution
		*out = new(string)
		**out = **in
	}
	if in.MemoryInMb != nil {
		in, out := &in.MemoryInMb, &out.MemoryInMb
		*out = new(float64)
		**out = **in
	}
	if in.OversubscriptionPercent != nil {
		in, out := &in.OversubscriptionPercent, &out.OversubscriptionPercent
		*out = new(float64)
		**out = **in
	}
	if in.StorageInGb != nil {
		in, out := &in.StorageInGb, &out.StorageInGb
		*out = new(float64)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.CPUMillicore != nil {
		in, out := &in.CPUMillicore, &out.CPUMillicore
		*out = new(float64)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.K8SDistribution != nil {
		in, out := &in.K8SDistribution, &out.K8SDistribution
		*out = new(string)
		**out = **in
	}
	if in.MemoryInMb != nil {
		in, out := &in.MemoryInMb, &out.MemoryInMb
		*out = new(float64)
		**out = **in
	}
	if in.OversubscriptionPercent != nil {
		in, out := &in.OversubscriptionPercent, &out.OversubscriptionPercent
		*out = new(float64)
		**out = **in
	}
	if in.StorageInGb != nil {
		in, out := &in.StorageInGb, &out.StorageInGb
		*out = new(float64)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialsInitParameters) DeepCopyInto(out *CredentialsInitParameters) {
	*out = *in
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialsInitParameters.
func (in *CredentialsInitParameters) DeepCopy() *CredentialsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CredentialsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialsObservation) DeepCopyInto(out *CredentialsObservation) {
	*out = *in
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialsObservation.
func (in *CredentialsObservation) DeepCopy() *CredentialsObservation {
	if in == nil {
		return nil
	}
	out := new(CredentialsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialsParameters) DeepCopyInto(out *CredentialsParameters) {
	*out = *in
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialsParameters.
func (in *CredentialsParameters) DeepCopy() *CredentialsParameters {
	if in == nil {
		return nil
	}
	out := new(CredentialsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudAccount) DeepCopyInto(out *CustomCloudAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudAccount.
func (in *CustomCloudAccount) DeepCopy() *CustomCloudAccount {
	if in == nil {
		return nil
	}
	out := new(CustomCloudAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomCloudAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudAccountInitParameters) DeepCopyInto(out *CustomCloudAccountInitParameters) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudAccountInitParameters.
func (in *CustomCloudAccountInitParameters) DeepCopy() *CustomCloudAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudAccountList) DeepCopyInto(out *CustomCloudAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomCloudAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudAccountList.
func (in *CustomCloudAccountList) DeepCopy() *CustomCloudAccountList {
	if in == nil {
		return nil
	}
	out := new(CustomCloudAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomCloudAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudAccountObservation) DeepCopyInto(out *CustomCloudAccountObservation) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudAccountObservation.
func (in *CustomCloudAccountObservation) DeepCopy() *CustomCloudAccountObservation {
	if in == nil {
		return nil
	}
	out := new(CustomCloudAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudAccountParameters) DeepCopyInto(out *CustomCloudAccountParameters) {
	*out = *in
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	out.CredentialsSecretRef = in.CredentialsSecretRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudAccountParameters.
func (in *CustomCloudAccountParameters) DeepCopy() *CustomCloudAccountParameters {
	if in == nil {
		return nil
	}
	out := new(CustomCloudAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudAccountSpec) DeepCopyInto(out *CustomCloudAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudAccountSpec.
func (in *CustomCloudAccountSpec) DeepCopy() *CustomCloudAccountSpec {
	if in == nil {
		return nil
	}
	out := new(CustomCloudAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomCloudAccountStatus) DeepCopyInto(out *CustomCloudAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomCloudAccountStatus.
func (in *CustomCloudAccountStatus) DeepCopy() *CustomCloudAccountStatus {
	if in == nil {
		return nil
	}
	out := new(CustomCloudAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeveloperSetting) DeepCopyInto(out *DeveloperSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeveloperSetting.
func (in *DeveloperSetting) DeepCopy() *DeveloperSetting {
	if in == nil {
		return nil
	}
	out := new(DeveloperSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeveloperSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeveloperSettingInitParameters) DeepCopyInto(out *DeveloperSettingInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.HideSystemClusterGroup != nil {
		in, out := &in.HideSystemClusterGroup, &out.HideSystemClusterGroup
		*out = new(bool)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(float64)
		**out = **in
	}
	if in.VirtualClustersLimit != nil {
		in, out := &in.VirtualClustersLimit, &out.VirtualClustersLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeveloperSettingInitParameters.
func (in *DeveloperSettingInitParameters) DeepCopy() *DeveloperSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeveloperSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeveloperSettingList) DeepCopyInto(out *DeveloperSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DeveloperSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeveloperSettingList.
func (in *DeveloperSettingList) DeepCopy() *DeveloperSettingList {
	if in == nil {
		return nil
	}
	out := new(DeveloperSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeveloperSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeveloperSettingObservation) DeepCopyInto(out *DeveloperSettingObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.HideSystemClusterGroup != nil {
		in, out := &in.HideSystemClusterGroup, &out.HideSystemClusterGroup
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(float64)
		**out = **in
	}
	if in.VirtualClustersLimit != nil {
		in, out := &in.VirtualClustersLimit, &out.VirtualClustersLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeveloperSettingObservation.
func (in *DeveloperSettingObservation) DeepCopy() *DeveloperSettingObservation {
	if in == nil {
		return nil
	}
	out := new(DeveloperSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeveloperSettingParameters) DeepCopyInto(out *DeveloperSettingParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.HideSystemClusterGroup != nil {
		in, out := &in.HideSystemClusterGroup, &out.HideSystemClusterGroup
		*out = new(bool)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(float64)
		**out = **in
	}
	if in.VirtualClustersLimit != nil {
		in, out := &in.VirtualClustersLimit, &out.VirtualClustersLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeveloperSettingParameters.
func (in *DeveloperSettingParameters) DeepCopy() *DeveloperSettingParameters {
	if in == nil {
		return nil
	}
	out := new(DeveloperSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeveloperSettingSpec) DeepCopyInto(out *DeveloperSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeveloperSettingSpec.
func (in *DeveloperSettingSpec) DeepCopy() *DeveloperSettingSpec {
	if in == nil {
		return nil
	}
	out := new(DeveloperSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeveloperSettingStatus) DeepCopyInto(out *DeveloperSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeveloperSettingStatus.
func (in *DeveloperSettingStatus) DeepCopy() *DeveloperSettingStatus {
	if in == nil {
		return nil
	}
	out := new(DeveloperSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSCluster) DeepCopyInto(out *EKSCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSCluster.
func (in *EKSCluster) DeepCopy() *EKSCluster {
	if in == nil {
		return nil
	}
	out := new(EKSCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EKSCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterBackupPolicyInitParameters) DeepCopyInto(out *EKSClusterBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterBackupPolicyInitParameters.
func (in *EKSClusterBackupPolicyInitParameters) DeepCopy() *EKSClusterBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterBackupPolicyObservation) DeepCopyInto(out *EKSClusterBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterBackupPolicyObservation.
func (in *EKSClusterBackupPolicyObservation) DeepCopy() *EKSClusterBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterBackupPolicyParameters) DeepCopyInto(out *EKSClusterBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterBackupPolicyParameters.
func (in *EKSClusterBackupPolicyParameters) DeepCopy() *EKSClusterBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterCloudConfigInitParameters) DeepCopyInto(out *EKSClusterCloudConfigInitParameters) {
	*out = *in
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EncryptionConfigArn != nil {
		in, out := &in.EncryptionConfigArn, &out.EncryptionConfigArn
		*out = new(string)
		**out = **in
	}
	if in.EndpointAccess != nil {
		in, out := &in.EndpointAccess, &out.EndpointAccess
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessCidrs != nil {
		in, out := &in.PrivateAccessCidrs, &out.PrivateAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterCloudConfigInitParameters.
func (in *EKSClusterCloudConfigInitParameters) DeepCopy() *EKSClusterCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterCloudConfigObservation) DeepCopyInto(out *EKSClusterCloudConfigObservation) {
	*out = *in
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EncryptionConfigArn != nil {
		in, out := &in.EncryptionConfigArn, &out.EncryptionConfigArn
		*out = new(string)
		**out = **in
	}
	if in.EndpointAccess != nil {
		in, out := &in.EndpointAccess, &out.EndpointAccess
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessCidrs != nil {
		in, out := &in.PrivateAccessCidrs, &out.PrivateAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterCloudConfigObservation.
func (in *EKSClusterCloudConfigObservation) DeepCopy() *EKSClusterCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterCloudConfigParameters) DeepCopyInto(out *EKSClusterCloudConfigParameters) {
	*out = *in
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EncryptionConfigArn != nil {
		in, out := &in.EncryptionConfigArn, &out.EncryptionConfigArn
		*out = new(string)
		**out = **in
	}
	if in.EndpointAccess != nil {
		in, out := &in.EndpointAccess, &out.EndpointAccess
		*out = new(string)
		**out = **in
	}
	if in.PrivateAccessCidrs != nil {
		in, out := &in.PrivateAccessCidrs, &out.PrivateAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PublicAccessCidrs != nil {
		in, out := &in.PublicAccessCidrs, &out.PublicAccessCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyName != nil {
		in, out := &in.SSHKeyName, &out.SSHKeyName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterCloudConfigParameters.
func (in *EKSClusterCloudConfigParameters) DeepCopy() *EKSClusterCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterClusterProfileInitParameters) DeepCopyInto(out *EKSClusterClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterClusterProfileInitParameters.
func (in *EKSClusterClusterProfileInitParameters) DeepCopy() *EKSClusterClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterClusterProfileObservation) DeepCopyInto(out *EKSClusterClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterClusterProfileObservation.
func (in *EKSClusterClusterProfileObservation) DeepCopy() *EKSClusterClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterClusterProfileParameters) DeepCopyInto(out *EKSClusterClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]ClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterClusterProfileParameters.
func (in *EKSClusterClusterProfileParameters) DeepCopy() *EKSClusterClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterClusterRbacBindingInitParameters) DeepCopyInto(out *EKSClusterClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]ClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterClusterRbacBindingInitParameters.
func (in *EKSClusterClusterRbacBindingInitParameters) DeepCopy() *EKSClusterClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterClusterRbacBindingObservation) DeepCopyInto(out *EKSClusterClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]ClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterClusterRbacBindingObservation.
func (in *EKSClusterClusterRbacBindingObservation) DeepCopy() *EKSClusterClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterClusterRbacBindingParameters) DeepCopyInto(out *EKSClusterClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]ClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterClusterRbacBindingParameters.
func (in *EKSClusterClusterRbacBindingParameters) DeepCopy() *EKSClusterClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterHostConfigInitParameters) DeepCopyInto(out *EKSClusterHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterHostConfigInitParameters.
func (in *EKSClusterHostConfigInitParameters) DeepCopy() *EKSClusterHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterHostConfigObservation) DeepCopyInto(out *EKSClusterHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterHostConfigObservation.
func (in *EKSClusterHostConfigObservation) DeepCopy() *EKSClusterHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterHostConfigParameters) DeepCopyInto(out *EKSClusterHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterHostConfigParameters.
func (in *EKSClusterHostConfigParameters) DeepCopy() *EKSClusterHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterInitParameters) DeepCopyInto(out *EKSClusterInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EKSClusterBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EKSClusterCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EKSClusterClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EKSClusterClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FargateProfile != nil {
		in, out := &in.FargateProfile, &out.FargateProfile
		*out = make([]FargateProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EKSClusterHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EKSClusterMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EKSClusterNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EKSClusterScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterInitParameters.
func (in *EKSClusterInitParameters) DeepCopy() *EKSClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterList) DeepCopyInto(out *EKSClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EKSCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterList.
func (in *EKSClusterList) DeepCopy() *EKSClusterList {
	if in == nil {
		return nil
	}
	out := new(EKSClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EKSClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterLocationConfigInitParameters) DeepCopyInto(out *EKSClusterLocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterLocationConfigInitParameters.
func (in *EKSClusterLocationConfigInitParameters) DeepCopy() *EKSClusterLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterLocationConfigObservation) DeepCopyInto(out *EKSClusterLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterLocationConfigObservation.
func (in *EKSClusterLocationConfigObservation) DeepCopy() *EKSClusterLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterLocationConfigParameters) DeepCopyInto(out *EKSClusterLocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterLocationConfigParameters.
func (in *EKSClusterLocationConfigParameters) DeepCopy() *EKSClusterLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterMachinePoolInitParameters) DeepCopyInto(out *EKSClusterMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EksLaunchTemplate != nil {
		in, out := &in.EksLaunchTemplate, &out.EksLaunchTemplate
		*out = make([]EksLaunchTemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]MachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]MachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterMachinePoolInitParameters.
func (in *EKSClusterMachinePoolInitParameters) DeepCopy() *EKSClusterMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterMachinePoolObservation) DeepCopyInto(out *EKSClusterMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EksLaunchTemplate != nil {
		in, out := &in.EksLaunchTemplate, &out.EksLaunchTemplate
		*out = make([]EksLaunchTemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]MachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]MachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterMachinePoolObservation.
func (in *EKSClusterMachinePoolObservation) DeepCopy() *EKSClusterMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterMachinePoolParameters) DeepCopyInto(out *EKSClusterMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AzSubnets != nil {
		in, out := &in.AzSubnets, &out.AzSubnets
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Azs != nil {
		in, out := &in.Azs, &out.Azs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CapacityType != nil {
		in, out := &in.CapacityType, &out.CapacityType
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EksLaunchTemplate != nil {
		in, out := &in.EksLaunchTemplate, &out.EksLaunchTemplate
		*out = make([]EksLaunchTemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrice != nil {
		in, out := &in.MaxPrice, &out.MaxPrice
		*out = new(string)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]MachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]MachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterMachinePoolParameters.
func (in *EKSClusterMachinePoolParameters) DeepCopy() *EKSClusterMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterNamespacesInitParameters) DeepCopyInto(out *EKSClusterNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterNamespacesInitParameters.
func (in *EKSClusterNamespacesInitParameters) DeepCopy() *EKSClusterNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterNamespacesObservation) DeepCopyInto(out *EKSClusterNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterNamespacesObservation.
func (in *EKSClusterNamespacesObservation) DeepCopy() *EKSClusterNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterNamespacesParameters) DeepCopyInto(out *EKSClusterNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterNamespacesParameters.
func (in *EKSClusterNamespacesParameters) DeepCopy() *EKSClusterNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterObservation) DeepCopyInto(out *EKSClusterObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EKSClusterBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EKSClusterCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EKSClusterClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EKSClusterClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FargateProfile != nil {
		in, out := &in.FargateProfile, &out.FargateProfile
		*out = make([]FargateProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EKSClusterHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]EKSClusterLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EKSClusterMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EKSClusterNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EKSClusterScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterObservation.
func (in *EKSClusterObservation) DeepCopy() *EKSClusterObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterParameters) DeepCopyInto(out *EKSClusterParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]EKSClusterBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]EKSClusterCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]EKSClusterClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]EKSClusterClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FargateProfile != nil {
		in, out := &in.FargateProfile, &out.FargateProfile
		*out = make([]FargateProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]EKSClusterHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]EKSClusterMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]EKSClusterNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]EKSClusterScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterParameters.
func (in *EKSClusterParameters) DeepCopy() *EKSClusterParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterScanPolicyInitParameters) DeepCopyInto(out *EKSClusterScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterScanPolicyInitParameters.
func (in *EKSClusterScanPolicyInitParameters) DeepCopy() *EKSClusterScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterScanPolicyObservation) DeepCopyInto(out *EKSClusterScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterScanPolicyObservation.
func (in *EKSClusterScanPolicyObservation) DeepCopy() *EKSClusterScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EKSClusterScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterScanPolicyParameters) DeepCopyInto(out *EKSClusterScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterScanPolicyParameters.
func (in *EKSClusterScanPolicyParameters) DeepCopy() *EKSClusterScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EKSClusterScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterSpec) DeepCopyInto(out *EKSClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterSpec.
func (in *EKSClusterSpec) DeepCopy() *EKSClusterSpec {
	if in == nil {
		return nil
	}
	out := new(EKSClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EKSClusterStatus) DeepCopyInto(out *EKSClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EKSClusterStatus.
func (in *EKSClusterStatus) DeepCopy() *EKSClusterStatus {
	if in == nil {
		return nil
	}
	out := new(EKSClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksLaunchTemplateInitParameters) DeepCopyInto(out *EksLaunchTemplateInitParameters) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AdditionalSecurityGroups != nil {
		in, out := &in.AdditionalSecurityGroups, &out.AdditionalSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RootVolumeIops != nil {
		in, out := &in.RootVolumeIops, &out.RootVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeThroughput != nil {
		in, out := &in.RootVolumeThroughput, &out.RootVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksLaunchTemplateInitParameters.
func (in *EksLaunchTemplateInitParameters) DeepCopy() *EksLaunchTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(EksLaunchTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksLaunchTemplateObservation) DeepCopyInto(out *EksLaunchTemplateObservation) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AdditionalSecurityGroups != nil {
		in, out := &in.AdditionalSecurityGroups, &out.AdditionalSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RootVolumeIops != nil {
		in, out := &in.RootVolumeIops, &out.RootVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeThroughput != nil {
		in, out := &in.RootVolumeThroughput, &out.RootVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksLaunchTemplateObservation.
func (in *EksLaunchTemplateObservation) DeepCopy() *EksLaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(EksLaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksLaunchTemplateParameters) DeepCopyInto(out *EksLaunchTemplateParameters) {
	*out = *in
	if in.AMIID != nil {
		in, out := &in.AMIID, &out.AMIID
		*out = new(string)
		**out = **in
	}
	if in.AdditionalSecurityGroups != nil {
		in, out := &in.AdditionalSecurityGroups, &out.AdditionalSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RootVolumeIops != nil {
		in, out := &in.RootVolumeIops, &out.RootVolumeIops
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeThroughput != nil {
		in, out := &in.RootVolumeThroughput, &out.RootVolumeThroughput
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksLaunchTemplateParameters.
func (in *EksLaunchTemplateParameters) DeepCopy() *EksLaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(EksLaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FargateProfileInitParameters) DeepCopyInto(out *FargateProfileInitParameters) {
	*out = *in
	if in.AdditionalTags != nil {
		in, out := &in.AdditionalTags, &out.AdditionalTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make([]SelectorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FargateProfileInitParameters.
func (in *FargateProfileInitParameters) DeepCopy() *FargateProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(FargateProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FargateProfileObservation) DeepCopyInto(out *FargateProfileObservation) {
	*out = *in
	if in.AdditionalTags != nil {
		in, out := &in.AdditionalTags, &out.AdditionalTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make([]SelectorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FargateProfileObservation.
func (in *FargateProfileObservation) DeepCopy() *FargateProfileObservation {
	if in == nil {
		return nil
	}
	out := new(FargateProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FargateProfileParameters) DeepCopyInto(out *FargateProfileParameters) {
	*out = *in
	if in.AdditionalTags != nil {
		in, out := &in.AdditionalTags, &out.AdditionalTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make([]SelectorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FargateProfileParameters.
func (in *FargateProfileParameters) DeepCopy() *FargateProfileParameters {
	if in == nil {
		return nil
	}
	out := new(FargateProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Filter) DeepCopyInto(out *Filter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Filter.
func (in *Filter) DeepCopy() *Filter {
	if in == nil {
		return nil
	}
	out := new(Filter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Filter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterGroupInitParameters) DeepCopyInto(out *FilterGroupInitParameters) {
	*out = *in
	if in.Conjunction != nil {
		in, out := &in.Conjunction, &out.Conjunction
		*out = new(string)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterGroupInitParameters.
func (in *FilterGroupInitParameters) DeepCopy() *FilterGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterGroupObservation) DeepCopyInto(out *FilterGroupObservation) {
	*out = *in
	if in.Conjunction != nil {
		in, out := &in.Conjunction, &out.Conjunction
		*out = new(string)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterGroupObservation.
func (in *FilterGroupObservation) DeepCopy() *FilterGroupObservation {
	if in == nil {
		return nil
	}
	out := new(FilterGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterGroupParameters) DeepCopyInto(out *FilterGroupParameters) {
	*out = *in
	if in.Conjunction != nil {
		in, out := &in.Conjunction, &out.Conjunction
		*out = new(string)
		**out = **in
	}
	if in.Filters != nil {
		in, out := &in.Filters, &out.Filters
		*out = make([]FiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterGroupParameters.
func (in *FilterGroupParameters) DeepCopy() *FilterGroupParameters {
	if in == nil {
		return nil
	}
	out := new(FilterGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterInitParameters) DeepCopyInto(out *FilterInitParameters) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterInitParameters.
func (in *FilterInitParameters) DeepCopy() *FilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterList) DeepCopyInto(out *FilterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Filter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterList.
func (in *FilterList) DeepCopy() *FilterList {
	if in == nil {
		return nil
	}
	out := new(FilterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FilterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = make([]SpecParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterSpec) DeepCopyInto(out *FilterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterSpec.
func (in *FilterSpec) DeepCopy() *FilterSpec {
	if in == nil {
		return nil
	}
	out := new(FilterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterStatus) DeepCopyInto(out *FilterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterStatus.
func (in *FilterStatus) DeepCopy() *FilterStatus {
	if in == nil {
		return nil
	}
	out := new(FilterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersInitParameters) DeepCopyInto(out *FiltersInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Negation != nil {
		in, out := &in.Negation, &out.Negation
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersInitParameters.
func (in *FiltersInitParameters) DeepCopy() *FiltersInitParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersObservation) DeepCopyInto(out *FiltersObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Negation != nil {
		in, out := &in.Negation, &out.Negation
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersObservation.
func (in *FiltersObservation) DeepCopy() *FiltersObservation {
	if in == nil {
		return nil
	}
	out := new(FiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FiltersParameters) DeepCopyInto(out *FiltersParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Negation != nil {
		in, out := &in.Negation, &out.Negation
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FiltersParameters.
func (in *FiltersParameters) DeepCopy() *FiltersParameters {
	if in == nil {
		return nil
	}
	out := new(FiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudAccount) DeepCopyInto(out *GCPCloudAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudAccount.
func (in *GCPCloudAccount) DeepCopy() *GCPCloudAccount {
	if in == nil {
		return nil
	}
	out := new(GCPCloudAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPCloudAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudAccountInitParameters) DeepCopyInto(out *GCPCloudAccountInitParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.GCPJSONCredentials != nil {
		in, out := &in.GCPJSONCredentials, &out.GCPJSONCredentials
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudAccountInitParameters.
func (in *GCPCloudAccountInitParameters) DeepCopy() *GCPCloudAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPCloudAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudAccountList) DeepCopyInto(out *GCPCloudAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GCPCloudAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudAccountList.
func (in *GCPCloudAccountList) DeepCopy() *GCPCloudAccountList {
	if in == nil {
		return nil
	}
	out := new(GCPCloudAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPCloudAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudAccountObservation) DeepCopyInto(out *GCPCloudAccountObservation) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.GCPJSONCredentials != nil {
		in, out := &in.GCPJSONCredentials, &out.GCPJSONCredentials
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudAccountObservation.
func (in *GCPCloudAccountObservation) DeepCopy() *GCPCloudAccountObservation {
	if in == nil {
		return nil
	}
	out := new(GCPCloudAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudAccountParameters) DeepCopyInto(out *GCPCloudAccountParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.GCPJSONCredentials != nil {
		in, out := &in.GCPJSONCredentials, &out.GCPJSONCredentials
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudAccountParameters.
func (in *GCPCloudAccountParameters) DeepCopy() *GCPCloudAccountParameters {
	if in == nil {
		return nil
	}
	out := new(GCPCloudAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudAccountSpec) DeepCopyInto(out *GCPCloudAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudAccountSpec.
func (in *GCPCloudAccountSpec) DeepCopy() *GCPCloudAccountSpec {
	if in == nil {
		return nil
	}
	out := new(GCPCloudAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPCloudAccountStatus) DeepCopyInto(out *GCPCloudAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPCloudAccountStatus.
func (in *GCPCloudAccountStatus) DeepCopy() *GCPCloudAccountStatus {
	if in == nil {
		return nil
	}
	out := new(GCPCloudAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPStorageConfigInitParameters) DeepCopyInto(out *GCPStorageConfigInitParameters) {
	*out = *in
	out.GCPJSONCredentialsSecretRef = in.GCPJSONCredentialsSecretRef
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPStorageConfigInitParameters.
func (in *GCPStorageConfigInitParameters) DeepCopy() *GCPStorageConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(GCPStorageConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPStorageConfigObservation) DeepCopyInto(out *GCPStorageConfigObservation) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPStorageConfigObservation.
func (in *GCPStorageConfigObservation) DeepCopy() *GCPStorageConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GCPStorageConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPStorageConfigParameters) DeepCopyInto(out *GCPStorageConfigParameters) {
	*out = *in
	out.GCPJSONCredentialsSecretRef = in.GCPJSONCredentialsSecretRef
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPStorageConfigParameters.
func (in *GCPStorageConfigParameters) DeepCopy() *GCPStorageConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GCPStorageConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmRegistry) DeepCopyInto(out *HelmRegistry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmRegistry.
func (in *HelmRegistry) DeepCopy() *HelmRegistry {
	if in == nil {
		return nil
	}
	out := new(HelmRegistry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HelmRegistry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmRegistryInitParameters) DeepCopyInto(out *HelmRegistryInitParameters) {
	*out = *in
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make([]CredentialsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmRegistryInitParameters.
func (in *HelmRegistryInitParameters) DeepCopy() *HelmRegistryInitParameters {
	if in == nil {
		return nil
	}
	out := new(HelmRegistryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmRegistryList) DeepCopyInto(out *HelmRegistryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HelmRegistry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmRegistryList.
func (in *HelmRegistryList) DeepCopy() *HelmRegistryList {
	if in == nil {
		return nil
	}
	out := new(HelmRegistryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HelmRegistryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmRegistryObservation) DeepCopyInto(out *HelmRegistryObservation) {
	*out = *in
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make([]CredentialsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmRegistryObservation.
func (in *HelmRegistryObservation) DeepCopy() *HelmRegistryObservation {
	if in == nil {
		return nil
	}
	out := new(HelmRegistryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmRegistryParameters) DeepCopyInto(out *HelmRegistryParameters) {
	*out = *in
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make([]CredentialsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmRegistryParameters.
func (in *HelmRegistryParameters) DeepCopy() *HelmRegistryParameters {
	if in == nil {
		return nil
	}
	out := new(HelmRegistryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmRegistrySpec) DeepCopyInto(out *HelmRegistrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmRegistrySpec.
func (in *HelmRegistrySpec) DeepCopy() *HelmRegistrySpec {
	if in == nil {
		return nil
	}
	out := new(HelmRegistrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmRegistryStatus) DeepCopyInto(out *HelmRegistryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmRegistryStatus.
func (in *HelmRegistryStatus) DeepCopy() *HelmRegistryStatus {
	if in == nil {
		return nil
	}
	out := new(HelmRegistryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostConfigInitParameters) DeepCopyInto(out *HostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostConfigInitParameters.
func (in *HostConfigInitParameters) DeepCopy() *HostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(HostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostConfigObservation) DeepCopyInto(out *HostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostConfigObservation.
func (in *HostConfigObservation) DeepCopy() *HostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostConfigParameters) DeepCopyInto(out *HostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostConfigParameters.
func (in *HostConfigParameters) DeepCopy() *HostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTypeInitParameters) DeepCopyInto(out *InstanceTypeInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTypeInitParameters.
func (in *InstanceTypeInitParameters) DeepCopy() *InstanceTypeInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTypeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTypeObservation) DeepCopyInto(out *InstanceTypeObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTypeObservation.
func (in *InstanceTypeObservation) DeepCopy() *InstanceTypeObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTypeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTypeParameters) DeepCopyInto(out *InstanceTypeParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.MemoryMb != nil {
		in, out := &in.MemoryMb, &out.MemoryMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTypeParameters.
func (in *InstanceTypeParameters) DeepCopy() *InstanceTypeParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTypeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationConfigInitParameters) DeepCopyInto(out *LocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationConfigInitParameters.
func (in *LocationConfigInitParameters) DeepCopy() *LocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationConfigObservation) DeepCopyInto(out *LocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationConfigObservation.
func (in *LocationConfigObservation) DeepCopy() *LocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocationConfigParameters) DeepCopyInto(out *LocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocationConfigParameters.
func (in *LocationConfigParameters) DeepCopy() *LocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginBannerInitParameters) DeepCopyInto(out *LoginBannerInitParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginBannerInitParameters.
func (in *LoginBannerInitParameters) DeepCopy() *LoginBannerInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoginBannerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginBannerObservation) DeepCopyInto(out *LoginBannerObservation) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginBannerObservation.
func (in *LoginBannerObservation) DeepCopy() *LoginBannerObservation {
	if in == nil {
		return nil
	}
	out := new(LoginBannerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginBannerParameters) DeepCopyInto(out *LoginBannerParameters) {
	*out = *in
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginBannerParameters.
func (in *LoginBannerParameters) DeepCopy() *LoginBannerParameters {
	if in == nil {
		return nil
	}
	out := new(LoginBannerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolInitParameters) DeepCopyInto(out *MachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.IsSystemNodePool != nil {
		in, out := &in.IsSystemNodePool, &out.IsSystemNodePool
		*out = new(bool)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]NodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolInitParameters.
func (in *MachinePoolInitParameters) DeepCopy() *MachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolNodeInitParameters) DeepCopyInto(out *MachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolNodeInitParameters.
func (in *MachinePoolNodeInitParameters) DeepCopy() *MachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolNodeObservation) DeepCopyInto(out *MachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolNodeObservation.
func (in *MachinePoolNodeObservation) DeepCopy() *MachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(MachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolNodeParameters) DeepCopyInto(out *MachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolNodeParameters.
func (in *MachinePoolNodeParameters) DeepCopy() *MachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolObservation) DeepCopyInto(out *MachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.IsSystemNodePool != nil {
		in, out := &in.IsSystemNodePool, &out.IsSystemNodePool
		*out = new(bool)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]NodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolObservation.
func (in *MachinePoolObservation) DeepCopy() *MachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(MachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolParameters) DeepCopyInto(out *MachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.IsSystemNodePool != nil {
		in, out := &in.IsSystemNodePool, &out.IsSystemNodePool
		*out = new(bool)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]NodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageAccountType != nil {
		in, out := &in.StorageAccountType, &out.StorageAccountType
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolParameters.
func (in *MachinePoolParameters) DeepCopy() *MachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolTaintsInitParameters) DeepCopyInto(out *MachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolTaintsInitParameters.
func (in *MachinePoolTaintsInitParameters) DeepCopy() *MachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolTaintsObservation) DeepCopyInto(out *MachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolTaintsObservation.
func (in *MachinePoolTaintsObservation) DeepCopy() *MachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(MachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachinePoolTaintsParameters) DeepCopyInto(out *MachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachinePoolTaintsParameters.
func (in *MachinePoolTaintsParameters) DeepCopy() *MachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(MachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Macros) DeepCopyInto(out *Macros) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Macros.
func (in *Macros) DeepCopy() *Macros {
	if in == nil {
		return nil
	}
	out := new(Macros)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Macros) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacrosInitParameters) DeepCopyInto(out *MacrosInitParameters) {
	*out = *in
	if in.Macros != nil {
		in, out := &in.Macros, &out.Macros
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacrosInitParameters.
func (in *MacrosInitParameters) DeepCopy() *MacrosInitParameters {
	if in == nil {
		return nil
	}
	out := new(MacrosInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacrosList) DeepCopyInto(out *MacrosList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Macros, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacrosList.
func (in *MacrosList) DeepCopy() *MacrosList {
	if in == nil {
		return nil
	}
	out := new(MacrosList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MacrosList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacrosObservation) DeepCopyInto(out *MacrosObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Macros != nil {
		in, out := &in.Macros, &out.Macros
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacrosObservation.
func (in *MacrosObservation) DeepCopy() *MacrosObservation {
	if in == nil {
		return nil
	}
	out := new(MacrosObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacrosParameters) DeepCopyInto(out *MacrosParameters) {
	*out = *in
	if in.Macros != nil {
		in, out := &in.Macros, &out.Macros
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacrosParameters.
func (in *MacrosParameters) DeepCopy() *MacrosParameters {
	if in == nil {
		return nil
	}
	out := new(MacrosParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacrosSpec) DeepCopyInto(out *MacrosSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacrosSpec.
func (in *MacrosSpec) DeepCopy() *MacrosSpec {
	if in == nil {
		return nil
	}
	out := new(MacrosSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacrosStatus) DeepCopyInto(out *MacrosStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacrosStatus.
func (in *MacrosStatus) DeepCopy() *MacrosStatus {
	if in == nil {
		return nil
	}
	out := new(MacrosStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManifestInitParameters) DeepCopyInto(out *ManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManifestInitParameters.
func (in *ManifestInitParameters) DeepCopy() *ManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManifestObservation) DeepCopyInto(out *ManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManifestObservation.
func (in *ManifestObservation) DeepCopy() *ManifestObservation {
	if in == nil {
		return nil
	}
	out := new(ManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManifestParameters) DeepCopyInto(out *ManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManifestParameters.
func (in *ManifestParameters) DeepCopy() *ManifestParameters {
	if in == nil {
		return nil
	}
	out := new(ManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataInitParameters) DeepCopyInto(out *MetadataInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataInitParameters.
func (in *MetadataInitParameters) DeepCopy() *MetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesInitParameters) DeepCopyInto(out *NamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesInitParameters.
func (in *NamespacesInitParameters) DeepCopy() *NamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(NamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesObservation) DeepCopyInto(out *NamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesObservation.
func (in *NamespacesObservation) DeepCopy() *NamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(NamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacesParameters) DeepCopyInto(out *NamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacesParameters.
func (in *NamespacesParameters) DeepCopy() *NamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(NamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeInitParameters) DeepCopyInto(out *NodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeInitParameters.
func (in *NodeInitParameters) DeepCopy() *NodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeObservation) DeepCopyInto(out *NodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeObservation.
func (in *NodeObservation) DeepCopy() *NodeObservation {
	if in == nil {
		return nil
	}
	out := new(NodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeParameters) DeepCopyInto(out *NodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeParameters.
func (in *NodeParameters) DeepCopy() *NodeParameters {
	if in == nil {
		return nil
	}
	out := new(NodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistry) DeepCopyInto(out *OCIRegistry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistry.
func (in *OCIRegistry) DeepCopy() *OCIRegistry {
	if in == nil {
		return nil
	}
	out := new(OCIRegistry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OCIRegistry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistryCredentialsInitParameters) DeepCopyInto(out *OCIRegistryCredentialsInitParameters) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = make([]TLSConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistryCredentialsInitParameters.
func (in *OCIRegistryCredentialsInitParameters) DeepCopy() *OCIRegistryCredentialsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OCIRegistryCredentialsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistryCredentialsObservation) DeepCopyInto(out *OCIRegistryCredentialsObservation) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = make([]TLSConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistryCredentialsObservation.
func (in *OCIRegistryCredentialsObservation) DeepCopy() *OCIRegistryCredentialsObservation {
	if in == nil {
		return nil
	}
	out := new(OCIRegistryCredentialsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistryCredentialsParameters) DeepCopyInto(out *OCIRegistryCredentialsParameters) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = make([]TLSConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistryCredentialsParameters.
func (in *OCIRegistryCredentialsParameters) DeepCopy() *OCIRegistryCredentialsParameters {
	if in == nil {
		return nil
	}
	out := new(OCIRegistryCredentialsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistryInitParameters) DeepCopyInto(out *OCIRegistryInitParameters) {
	*out = *in
	if in.BaseContentPath != nil {
		in, out := &in.BaseContentPath, &out.BaseContentPath
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make([]OCIRegistryCredentialsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EndpointSuffix != nil {
		in, out := &in.EndpointSuffix, &out.EndpointSuffix
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.IsSynchronization != nil {
		in, out := &in.IsSynchronization, &out.IsSynchronization
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProviderType != nil {
		in, out := &in.ProviderType, &out.ProviderType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistryInitParameters.
func (in *OCIRegistryInitParameters) DeepCopy() *OCIRegistryInitParameters {
	if in == nil {
		return nil
	}
	out := new(OCIRegistryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistryList) DeepCopyInto(out *OCIRegistryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OCIRegistry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistryList.
func (in *OCIRegistryList) DeepCopy() *OCIRegistryList {
	if in == nil {
		return nil
	}
	out := new(OCIRegistryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OCIRegistryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistryObservation) DeepCopyInto(out *OCIRegistryObservation) {
	*out = *in
	if in.BaseContentPath != nil {
		in, out := &in.BaseContentPath, &out.BaseContentPath
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make([]OCIRegistryCredentialsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EndpointSuffix != nil {
		in, out := &in.EndpointSuffix, &out.EndpointSuffix
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.IsSynchronization != nil {
		in, out := &in.IsSynchronization, &out.IsSynchronization
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProviderType != nil {
		in, out := &in.ProviderType, &out.ProviderType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistryObservation.
func (in *OCIRegistryObservation) DeepCopy() *OCIRegistryObservation {
	if in == nil {
		return nil
	}
	out := new(OCIRegistryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistryParameters) DeepCopyInto(out *OCIRegistryParameters) {
	*out = *in
	if in.BaseContentPath != nil {
		in, out := &in.BaseContentPath, &out.BaseContentPath
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make([]OCIRegistryCredentialsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.EndpointSuffix != nil {
		in, out := &in.EndpointSuffix, &out.EndpointSuffix
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.IsSynchronization != nil {
		in, out := &in.IsSynchronization, &out.IsSynchronization
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProviderType != nil {
		in, out := &in.ProviderType, &out.ProviderType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistryParameters.
func (in *OCIRegistryParameters) DeepCopy() *OCIRegistryParameters {
	if in == nil {
		return nil
	}
	out := new(OCIRegistryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistrySpec) DeepCopyInto(out *OCIRegistrySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistrySpec.
func (in *OCIRegistrySpec) DeepCopy() *OCIRegistrySpec {
	if in == nil {
		return nil
	}
	out := new(OCIRegistrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OCIRegistryStatus) DeepCopyInto(out *OCIRegistryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OCIRegistryStatus.
func (in *OCIRegistryStatus) DeepCopy() *OCIRegistryStatus {
	if in == nil {
		return nil
	}
	out := new(OCIRegistryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackInitParameters) DeepCopyInto(out *PackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackInitParameters.
func (in *PackInitParameters) DeepCopy() *PackInitParameters {
	if in == nil {
		return nil
	}
	out := new(PackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackManifestInitParameters) DeepCopyInto(out *PackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackManifestInitParameters.
func (in *PackManifestInitParameters) DeepCopy() *PackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(PackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackManifestObservation) DeepCopyInto(out *PackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackManifestObservation.
func (in *PackManifestObservation) DeepCopy() *PackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(PackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackManifestParameters) DeepCopyInto(out *PackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackManifestParameters.
func (in *PackManifestParameters) DeepCopy() *PackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(PackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackObservation) DeepCopyInto(out *PackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackObservation.
func (in *PackObservation) DeepCopy() *PackObservation {
	if in == nil {
		return nil
	}
	out := new(PackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackParameters) DeepCopyInto(out *PackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]ManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackParameters.
func (in *PackParameters) DeepCopy() *PackParameters {
	if in == nil {
		return nil
	}
	out := new(PackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicy) DeepCopyInto(out *PasswordPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicy.
func (in *PasswordPolicy) DeepCopy() *PasswordPolicy {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PasswordPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyInitParameters) DeepCopyInto(out *PasswordPolicyInitParameters) {
	*out = *in
	if in.FirstReminderDays != nil {
		in, out := &in.FirstReminderDays, &out.FirstReminderDays
		*out = new(float64)
		**out = **in
	}
	if in.MinDigits != nil {
		in, out := &in.MinDigits, &out.MinDigits
		*out = new(float64)
		**out = **in
	}
	if in.MinLowercaseLetters != nil {
		in, out := &in.MinLowercaseLetters, &out.MinLowercaseLetters
		*out = new(float64)
		**out = **in
	}
	if in.MinPasswordLength != nil {
		in, out := &in.MinPasswordLength, &out.MinPasswordLength
		*out = new(float64)
		**out = **in
	}
	if in.MinSpecialCharacters != nil {
		in, out := &in.MinSpecialCharacters, &out.MinSpecialCharacters
		*out = new(float64)
		**out = **in
	}
	if in.MinUppercaseLetters != nil {
		in, out := &in.MinUppercaseLetters, &out.MinUppercaseLetters
		*out = new(float64)
		**out = **in
	}
	if in.PasswordExpiryDays != nil {
		in, out := &in.PasswordExpiryDays, &out.PasswordExpiryDays
		*out = new(float64)
		**out = **in
	}
	if in.PasswordRegex != nil {
		in, out := &in.PasswordRegex, &out.PasswordRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyInitParameters.
func (in *PasswordPolicyInitParameters) DeepCopy() *PasswordPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyList) DeepCopyInto(out *PasswordPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PasswordPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyList.
func (in *PasswordPolicyList) DeepCopy() *PasswordPolicyList {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PasswordPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyObservation) DeepCopyInto(out *PasswordPolicyObservation) {
	*out = *in
	if in.FirstReminderDays != nil {
		in, out := &in.FirstReminderDays, &out.FirstReminderDays
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MinDigits != nil {
		in, out := &in.MinDigits, &out.MinDigits
		*out = new(float64)
		**out = **in
	}
	if in.MinLowercaseLetters != nil {
		in, out := &in.MinLowercaseLetters, &out.MinLowercaseLetters
		*out = new(float64)
		**out = **in
	}
	if in.MinPasswordLength != nil {
		in, out := &in.MinPasswordLength, &out.MinPasswordLength
		*out = new(float64)
		**out = **in
	}
	if in.MinSpecialCharacters != nil {
		in, out := &in.MinSpecialCharacters, &out.MinSpecialCharacters
		*out = new(float64)
		**out = **in
	}
	if in.MinUppercaseLetters != nil {
		in, out := &in.MinUppercaseLetters, &out.MinUppercaseLetters
		*out = new(float64)
		**out = **in
	}
	if in.PasswordExpiryDays != nil {
		in, out := &in.PasswordExpiryDays, &out.PasswordExpiryDays
		*out = new(float64)
		**out = **in
	}
	if in.PasswordRegex != nil {
		in, out := &in.PasswordRegex, &out.PasswordRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyObservation.
func (in *PasswordPolicyObservation) DeepCopy() *PasswordPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyParameters) DeepCopyInto(out *PasswordPolicyParameters) {
	*out = *in
	if in.FirstReminderDays != nil {
		in, out := &in.FirstReminderDays, &out.FirstReminderDays
		*out = new(float64)
		**out = **in
	}
	if in.MinDigits != nil {
		in, out := &in.MinDigits, &out.MinDigits
		*out = new(float64)
		**out = **in
	}
	if in.MinLowercaseLetters != nil {
		in, out := &in.MinLowercaseLetters, &out.MinLowercaseLetters
		*out = new(float64)
		**out = **in
	}
	if in.MinPasswordLength != nil {
		in, out := &in.MinPasswordLength, &out.MinPasswordLength
		*out = new(float64)
		**out = **in
	}
	if in.MinSpecialCharacters != nil {
		in, out := &in.MinSpecialCharacters, &out.MinSpecialCharacters
		*out = new(float64)
		**out = **in
	}
	if in.MinUppercaseLetters != nil {
		in, out := &in.MinUppercaseLetters, &out.MinUppercaseLetters
		*out = new(float64)
		**out = **in
	}
	if in.PasswordExpiryDays != nil {
		in, out := &in.PasswordExpiryDays, &out.PasswordExpiryDays
		*out = new(float64)
		**out = **in
	}
	if in.PasswordRegex != nil {
		in, out := &in.PasswordRegex, &out.PasswordRegex
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyParameters.
func (in *PasswordPolicyParameters) DeepCopy() *PasswordPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicySpec) DeepCopyInto(out *PasswordPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicySpec.
func (in *PasswordPolicySpec) DeepCopy() *PasswordPolicySpec {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyStatus) DeepCopyInto(out *PasswordPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyStatus.
func (in *PasswordPolicyStatus) DeepCopy() *PasswordPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementInitParameters) DeepCopyInto(out *PlacementInitParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.StaticIPPoolID != nil {
		in, out := &in.StaticIPPoolID, &out.StaticIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementInitParameters.
func (in *PlacementInitParameters) DeepCopy() *PlacementInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementObservation) DeepCopyInto(out *PlacementObservation) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.StaticIPPoolID != nil {
		in, out := &in.StaticIPPoolID, &out.StaticIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementObservation.
func (in *PlacementObservation) DeepCopy() *PlacementObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementParameters) DeepCopyInto(out *PlacementParameters) {
	*out = *in
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Datastore != nil {
		in, out := &in.Datastore, &out.Datastore
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.ResourcePool != nil {
		in, out := &in.ResourcePool, &out.ResourcePool
		*out = new(string)
		**out = **in
	}
	if in.StaticIPPoolID != nil {
		in, out := &in.StaticIPPoolID, &out.StaticIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementParameters.
func (in *PlacementParameters) DeepCopy() *PlacementParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSetting) DeepCopyInto(out *PlatformSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSetting.
func (in *PlatformSetting) DeepCopy() *PlatformSetting {
	if in == nil {
		return nil
	}
	out := new(PlatformSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlatformSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSettingInitParameters) DeepCopyInto(out *PlatformSettingInitParameters) {
	*out = *in
	if in.ClusterAutoRemediation != nil {
		in, out := &in.ClusterAutoRemediation, &out.ClusterAutoRemediation
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoRemediation != nil {
		in, out := &in.EnableAutoRemediation, &out.EnableAutoRemediation
		*out = new(bool)
		**out = **in
	}
	if in.LoginBanner != nil {
		in, out := &in.LoginBanner, &out.LoginBanner
		*out = make([]LoginBannerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NonFipsAddonPack != nil {
		in, out := &in.NonFipsAddonPack, &out.NonFipsAddonPack
		*out = new(bool)
		**out = **in
	}
	if in.NonFipsClusterImport != nil {
		in, out := &in.NonFipsClusterImport, &out.NonFipsClusterImport
		*out = new(bool)
		**out = **in
	}
	if in.NonFipsFeatures != nil {
		in, out := &in.NonFipsFeatures, &out.NonFipsFeatures
		*out = new(bool)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeout != nil {
		in, out := &in.SessionTimeout, &out.SessionTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSettingInitParameters.
func (in *PlatformSettingInitParameters) DeepCopy() *PlatformSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlatformSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSettingList) DeepCopyInto(out *PlatformSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PlatformSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSettingList.
func (in *PlatformSettingList) DeepCopy() *PlatformSettingList {
	if in == nil {
		return nil
	}
	out := new(PlatformSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlatformSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSettingObservation) DeepCopyInto(out *PlatformSettingObservation) {
	*out = *in
	if in.ClusterAutoRemediation != nil {
		in, out := &in.ClusterAutoRemediation, &out.ClusterAutoRemediation
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoRemediation != nil {
		in, out := &in.EnableAutoRemediation, &out.EnableAutoRemediation
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoginBanner != nil {
		in, out := &in.LoginBanner, &out.LoginBanner
		*out = make([]LoginBannerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NonFipsAddonPack != nil {
		in, out := &in.NonFipsAddonPack, &out.NonFipsAddonPack
		*out = new(bool)
		**out = **in
	}
	if in.NonFipsClusterImport != nil {
		in, out := &in.NonFipsClusterImport, &out.NonFipsClusterImport
		*out = new(bool)
		**out = **in
	}
	if in.NonFipsFeatures != nil {
		in, out := &in.NonFipsFeatures, &out.NonFipsFeatures
		*out = new(bool)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeout != nil {
		in, out := &in.SessionTimeout, &out.SessionTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSettingObservation.
func (in *PlatformSettingObservation) DeepCopy() *PlatformSettingObservation {
	if in == nil {
		return nil
	}
	out := new(PlatformSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSettingParameters) DeepCopyInto(out *PlatformSettingParameters) {
	*out = *in
	if in.ClusterAutoRemediation != nil {
		in, out := &in.ClusterAutoRemediation, &out.ClusterAutoRemediation
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.EnableAutoRemediation != nil {
		in, out := &in.EnableAutoRemediation, &out.EnableAutoRemediation
		*out = new(bool)
		**out = **in
	}
	if in.LoginBanner != nil {
		in, out := &in.LoginBanner, &out.LoginBanner
		*out = make([]LoginBannerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NonFipsAddonPack != nil {
		in, out := &in.NonFipsAddonPack, &out.NonFipsAddonPack
		*out = new(bool)
		**out = **in
	}
	if in.NonFipsClusterImport != nil {
		in, out := &in.NonFipsClusterImport, &out.NonFipsClusterImport
		*out = new(bool)
		**out = **in
	}
	if in.NonFipsFeatures != nil {
		in, out := &in.NonFipsFeatures, &out.NonFipsFeatures
		*out = new(bool)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeout != nil {
		in, out := &in.SessionTimeout, &out.SessionTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSettingParameters.
func (in *PlatformSettingParameters) DeepCopy() *PlatformSettingParameters {
	if in == nil {
		return nil
	}
	out := new(PlatformSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSettingSpec) DeepCopyInto(out *PlatformSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSettingSpec.
func (in *PlatformSettingSpec) DeepCopy() *PlatformSettingSpec {
	if in == nil {
		return nil
	}
	out := new(PlatformSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformSettingStatus) DeepCopyInto(out *PlatformSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformSettingStatus.
func (in *PlatformSettingStatus) DeepCopy() *PlatformSettingStatus {
	if in == nil {
		return nil
	}
	out := new(PlatformSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayDNSMap) DeepCopyInto(out *PrivateCloudGatewayDNSMap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayDNSMap.
func (in *PrivateCloudGatewayDNSMap) DeepCopy() *PrivateCloudGatewayDNSMap {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayDNSMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateCloudGatewayDNSMap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayDNSMapInitParameters) DeepCopyInto(out *PrivateCloudGatewayDNSMapInitParameters) {
	*out = *in
	if in.DataCenter != nil {
		in, out := &in.DataCenter, &out.DataCenter
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.SearchDomainName != nil {
		in, out := &in.SearchDomainName, &out.SearchDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayDNSMapInitParameters.
func (in *PrivateCloudGatewayDNSMapInitParameters) DeepCopy() *PrivateCloudGatewayDNSMapInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayDNSMapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayDNSMapList) DeepCopyInto(out *PrivateCloudGatewayDNSMapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateCloudGatewayDNSMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayDNSMapList.
func (in *PrivateCloudGatewayDNSMapList) DeepCopy() *PrivateCloudGatewayDNSMapList {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayDNSMapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateCloudGatewayDNSMapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayDNSMapObservation) DeepCopyInto(out *PrivateCloudGatewayDNSMapObservation) {
	*out = *in
	if in.DataCenter != nil {
		in, out := &in.DataCenter, &out.DataCenter
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.SearchDomainName != nil {
		in, out := &in.SearchDomainName, &out.SearchDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayDNSMapObservation.
func (in *PrivateCloudGatewayDNSMapObservation) DeepCopy() *PrivateCloudGatewayDNSMapObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayDNSMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayDNSMapParameters) DeepCopyInto(out *PrivateCloudGatewayDNSMapParameters) {
	*out = *in
	if in.DataCenter != nil {
		in, out := &in.DataCenter, &out.DataCenter
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.SearchDomainName != nil {
		in, out := &in.SearchDomainName, &out.SearchDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayDNSMapParameters.
func (in *PrivateCloudGatewayDNSMapParameters) DeepCopy() *PrivateCloudGatewayDNSMapParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayDNSMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayDNSMapSpec) DeepCopyInto(out *PrivateCloudGatewayDNSMapSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayDNSMapSpec.
func (in *PrivateCloudGatewayDNSMapSpec) DeepCopy() *PrivateCloudGatewayDNSMapSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayDNSMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayDNSMapStatus) DeepCopyInto(out *PrivateCloudGatewayDNSMapStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayDNSMapStatus.
func (in *PrivateCloudGatewayDNSMapStatus) DeepCopy() *PrivateCloudGatewayDNSMapStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayDNSMapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayIPPool) DeepCopyInto(out *PrivateCloudGatewayIPPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayIPPool.
func (in *PrivateCloudGatewayIPPool) DeepCopy() *PrivateCloudGatewayIPPool {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayIPPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateCloudGatewayIPPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayIPPoolInitParameters) DeepCopyInto(out *PrivateCloudGatewayIPPoolInitParameters) {
	*out = *in
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.IPEndRange != nil {
		in, out := &in.IPEndRange, &out.IPEndRange
		*out = new(string)
		**out = **in
	}
	if in.IPStartRange != nil {
		in, out := &in.IPStartRange, &out.IPStartRange
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameserverAddresses != nil {
		in, out := &in.NameserverAddresses, &out.NameserverAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NameserverSearchSuffix != nil {
		in, out := &in.NameserverSearchSuffix, &out.NameserverSearchSuffix
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.RestrictToSingleCluster != nil {
		in, out := &in.RestrictToSingleCluster, &out.RestrictToSingleCluster
		*out = new(bool)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayIPPoolInitParameters.
func (in *PrivateCloudGatewayIPPoolInitParameters) DeepCopy() *PrivateCloudGatewayIPPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayIPPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayIPPoolList) DeepCopyInto(out *PrivateCloudGatewayIPPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateCloudGatewayIPPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayIPPoolList.
func (in *PrivateCloudGatewayIPPoolList) DeepCopy() *PrivateCloudGatewayIPPoolList {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayIPPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateCloudGatewayIPPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayIPPoolObservation) DeepCopyInto(out *PrivateCloudGatewayIPPoolObservation) {
	*out = *in
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPEndRange != nil {
		in, out := &in.IPEndRange, &out.IPEndRange
		*out = new(string)
		**out = **in
	}
	if in.IPStartRange != nil {
		in, out := &in.IPStartRange, &out.IPStartRange
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameserverAddresses != nil {
		in, out := &in.NameserverAddresses, &out.NameserverAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NameserverSearchSuffix != nil {
		in, out := &in.NameserverSearchSuffix, &out.NameserverSearchSuffix
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.RestrictToSingleCluster != nil {
		in, out := &in.RestrictToSingleCluster, &out.RestrictToSingleCluster
		*out = new(bool)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayIPPoolObservation.
func (in *PrivateCloudGatewayIPPoolObservation) DeepCopy() *PrivateCloudGatewayIPPoolObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayIPPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayIPPoolParameters) DeepCopyInto(out *PrivateCloudGatewayIPPoolParameters) {
	*out = *in
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.IPEndRange != nil {
		in, out := &in.IPEndRange, &out.IPEndRange
		*out = new(string)
		**out = **in
	}
	if in.IPStartRange != nil {
		in, out := &in.IPStartRange, &out.IPStartRange
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameserverAddresses != nil {
		in, out := &in.NameserverAddresses, &out.NameserverAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NameserverSearchSuffix != nil {
		in, out := &in.NameserverSearchSuffix, &out.NameserverSearchSuffix
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.RestrictToSingleCluster != nil {
		in, out := &in.RestrictToSingleCluster, &out.RestrictToSingleCluster
		*out = new(bool)
		**out = **in
	}
	if in.SubnetCidr != nil {
		in, out := &in.SubnetCidr, &out.SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayIPPoolParameters.
func (in *PrivateCloudGatewayIPPoolParameters) DeepCopy() *PrivateCloudGatewayIPPoolParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayIPPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayIPPoolSpec) DeepCopyInto(out *PrivateCloudGatewayIPPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayIPPoolSpec.
func (in *PrivateCloudGatewayIPPoolSpec) DeepCopy() *PrivateCloudGatewayIPPoolSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayIPPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateCloudGatewayIPPoolStatus) DeepCopyInto(out *PrivateCloudGatewayIPPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateCloudGatewayIPPoolStatus.
func (in *PrivateCloudGatewayIPPoolStatus) DeepCopy() *PrivateCloudGatewayIPPoolStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateCloudGatewayIPPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileVariablesInitParameters) DeepCopyInto(out *ProfileVariablesInitParameters) {
	*out = *in
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileVariablesInitParameters.
func (in *ProfileVariablesInitParameters) DeepCopy() *ProfileVariablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileVariablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileVariablesObservation) DeepCopyInto(out *ProfileVariablesObservation) {
	*out = *in
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileVariablesObservation.
func (in *ProfileVariablesObservation) DeepCopy() *ProfileVariablesObservation {
	if in == nil {
		return nil
	}
	out := new(ProfileVariablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProfileVariablesParameters) DeepCopyInto(out *ProfileVariablesParameters) {
	*out = *in
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProfileVariablesParameters.
func (in *ProfileVariablesParameters) DeepCopy() *ProfileVariablesParameters {
	if in == nil {
		return nil
	}
	out := new(ProfileVariablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Project) DeepCopyInto(out *Project) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Project.
func (in *Project) DeepCopy() *Project {
	if in == nil {
		return nil
	}
	out := new(Project)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Project) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInitParameters) DeepCopyInto(out *ProjectInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInitParameters.
func (in *ProjectInitParameters) DeepCopy() *ProjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectList) DeepCopyInto(out *ProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Project, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectList.
func (in *ProjectList) DeepCopy() *ProjectList {
	if in == nil {
		return nil
	}
	out := new(ProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectObservation) DeepCopyInto(out *ProjectObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectObservation.
func (in *ProjectObservation) DeepCopy() *ProjectObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectParameters) DeepCopyInto(out *ProjectParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectParameters.
func (in *ProjectParameters) DeepCopy() *ProjectParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRoleInitParameters) DeepCopyInto(out *ProjectRoleInitParameters) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RoleIds != nil {
		in, out := &in.RoleIds, &out.RoleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRoleInitParameters.
func (in *ProjectRoleInitParameters) DeepCopy() *ProjectRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRoleMappingInitParameters) DeepCopyInto(out *ProjectRoleMappingInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRoleMappingInitParameters.
func (in *ProjectRoleMappingInitParameters) DeepCopy() *ProjectRoleMappingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectRoleMappingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRoleMappingObservation) DeepCopyInto(out *ProjectRoleMappingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRoleMappingObservation.
func (in *ProjectRoleMappingObservation) DeepCopy() *ProjectRoleMappingObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectRoleMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRoleMappingParameters) DeepCopyInto(out *ProjectRoleMappingParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRoleMappingParameters.
func (in *ProjectRoleMappingParameters) DeepCopy() *ProjectRoleMappingParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectRoleMappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRoleObservation) DeepCopyInto(out *ProjectRoleObservation) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RoleIds != nil {
		in, out := &in.RoleIds, &out.RoleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRoleObservation.
func (in *ProjectRoleObservation) DeepCopy() *ProjectRoleObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectRoleParameters) DeepCopyInto(out *ProjectRoleParameters) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RoleIds != nil {
		in, out := &in.RoleIds, &out.RoleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectRoleParameters.
func (in *ProjectRoleParameters) DeepCopy() *ProjectRoleParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec) DeepCopyInto(out *ProjectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec.
func (in *ProjectSpec) DeepCopy() *ProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectStatus) DeepCopyInto(out *ProjectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectStatus.
func (in *ProjectStatus) DeepCopy() *ProjectStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimit) DeepCopyInto(out *ResourceLimit) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimit.
func (in *ResourceLimit) DeepCopy() *ResourceLimit {
	if in == nil {
		return nil
	}
	out := new(ResourceLimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourceLimit) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitInitParameters) DeepCopyInto(out *ResourceLimitInitParameters) {
	*out = *in
	if in.APIKeys != nil {
		in, out := &in.APIKeys, &out.APIKeys
		*out = new(float64)
		**out = **in
	}
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = new(float64)
		**out = **in
	}
	if in.Appliance != nil {
		in, out := &in.Appliance, &out.Appliance
		*out = new(float64)
		**out = **in
	}
	if in.ApplianceToken != nil {
		in, out := &in.ApplianceToken, &out.ApplianceToken
		*out = new(float64)
		**out = **in
	}
	if in.ApplicationDeployment != nil {
		in, out := &in.ApplicationDeployment, &out.ApplicationDeployment
		*out = new(float64)
		**out = **in
	}
	if in.ApplicationProfile != nil {
		in, out := &in.ApplicationProfile, &out.ApplicationProfile
		*out = new(float64)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(float64)
		**out = **in
	}
	if in.CloudAccount != nil {
		in, out := &in.CloudAccount, &out.CloudAccount
		*out = new(float64)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(float64)
		**out = **in
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(float64)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = new(float64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(float64)
		**out = **in
	}
	if in.Macro != nil {
		in, out := &in.Macro, &out.Macro
		*out = new(float64)
		**out = **in
	}
	if in.PrivateGateway != nil {
		in, out := &in.PrivateGateway, &out.PrivateGateway
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(float64)
		**out = **in
	}
	if in.Registry != nil {
		in, out := &in.Registry, &out.Registry
		*out = new(float64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(float64)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(float64)
		**out = **in
	}
	if in.Team != nil {
		in, out := &in.Team, &out.Team
		*out = new(float64)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(float64)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitInitParameters.
func (in *ResourceLimitInitParameters) DeepCopy() *ResourceLimitInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitList) DeepCopyInto(out *ResourceLimitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ResourceLimit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitList.
func (in *ResourceLimitList) DeepCopy() *ResourceLimitList {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourceLimitList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitObservation) DeepCopyInto(out *ResourceLimitObservation) {
	*out = *in
	if in.APIKeys != nil {
		in, out := &in.APIKeys, &out.APIKeys
		*out = new(float64)
		**out = **in
	}
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = new(float64)
		**out = **in
	}
	if in.Appliance != nil {
		in, out := &in.Appliance, &out.Appliance
		*out = new(float64)
		**out = **in
	}
	if in.ApplianceToken != nil {
		in, out := &in.ApplianceToken, &out.ApplianceToken
		*out = new(float64)
		**out = **in
	}
	if in.ApplicationDeployment != nil {
		in, out := &in.ApplicationDeployment, &out.ApplicationDeployment
		*out = new(float64)
		**out = **in
	}
	if in.ApplicationProfile != nil {
		in, out := &in.ApplicationProfile, &out.ApplicationProfile
		*out = new(float64)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(float64)
		**out = **in
	}
	if in.CloudAccount != nil {
		in, out := &in.CloudAccount, &out.CloudAccount
		*out = new(float64)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(float64)
		**out = **in
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(float64)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = new(float64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(float64)
		**out = **in
	}
	if in.Macro != nil {
		in, out := &in.Macro, &out.Macro
		*out = new(float64)
		**out = **in
	}
	if in.PrivateGateway != nil {
		in, out := &in.PrivateGateway, &out.PrivateGateway
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(float64)
		**out = **in
	}
	if in.Registry != nil {
		in, out := &in.Registry, &out.Registry
		*out = new(float64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(float64)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(float64)
		**out = **in
	}
	if in.Team != nil {
		in, out := &in.Team, &out.Team
		*out = new(float64)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(float64)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitObservation.
func (in *ResourceLimitObservation) DeepCopy() *ResourceLimitObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitParameters) DeepCopyInto(out *ResourceLimitParameters) {
	*out = *in
	if in.APIKeys != nil {
		in, out := &in.APIKeys, &out.APIKeys
		*out = new(float64)
		**out = **in
	}
	if in.Alert != nil {
		in, out := &in.Alert, &out.Alert
		*out = new(float64)
		**out = **in
	}
	if in.Appliance != nil {
		in, out := &in.Appliance, &out.Appliance
		*out = new(float64)
		**out = **in
	}
	if in.ApplianceToken != nil {
		in, out := &in.ApplianceToken, &out.ApplianceToken
		*out = new(float64)
		**out = **in
	}
	if in.ApplicationDeployment != nil {
		in, out := &in.ApplicationDeployment, &out.ApplicationDeployment
		*out = new(float64)
		**out = **in
	}
	if in.ApplicationProfile != nil {
		in, out := &in.ApplicationProfile, &out.ApplicationProfile
		*out = new(float64)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(float64)
		**out = **in
	}
	if in.CloudAccount != nil {
		in, out := &in.CloudAccount, &out.CloudAccount
		*out = new(float64)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(float64)
		**out = **in
	}
	if in.ClusterGroup != nil {
		in, out := &in.ClusterGroup, &out.ClusterGroup
		*out = new(float64)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = new(float64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(float64)
		**out = **in
	}
	if in.Macro != nil {
		in, out := &in.Macro, &out.Macro
		*out = new(float64)
		**out = **in
	}
	if in.PrivateGateway != nil {
		in, out := &in.PrivateGateway, &out.PrivateGateway
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(float64)
		**out = **in
	}
	if in.Registry != nil {
		in, out := &in.Registry, &out.Registry
		*out = new(float64)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(float64)
		**out = **in
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(float64)
		**out = **in
	}
	if in.Team != nil {
		in, out := &in.Team, &out.Team
		*out = new(float64)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(float64)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitParameters.
func (in *ResourceLimitParameters) DeepCopy() *ResourceLimitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitSpec) DeepCopyInto(out *ResourceLimitSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitSpec.
func (in *ResourceLimitSpec) DeepCopy() *ResourceLimitSpec {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceLimitStatus) DeepCopyInto(out *ResourceLimitStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceLimitStatus.
func (in *ResourceLimitStatus) DeepCopy() *ResourceLimitStatus {
	if in == nil {
		return nil
	}
	out := new(ResourceLimitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRoleInitParameters) DeepCopyInto(out *ResourceRoleInitParameters) {
	*out = *in
	if in.FilterIds != nil {
		in, out := &in.FilterIds, &out.FilterIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectIds != nil {
		in, out := &in.ProjectIds, &out.ProjectIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RoleIds != nil {
		in, out := &in.RoleIds, &out.RoleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRoleInitParameters.
func (in *ResourceRoleInitParameters) DeepCopy() *ResourceRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRoleObservation) DeepCopyInto(out *ResourceRoleObservation) {
	*out = *in
	if in.FilterIds != nil {
		in, out := &in.FilterIds, &out.FilterIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectIds != nil {
		in, out := &in.ProjectIds, &out.ProjectIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RoleIds != nil {
		in, out := &in.RoleIds, &out.RoleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRoleObservation.
func (in *ResourceRoleObservation) DeepCopy() *ResourceRoleObservation {
	if in == nil {
		return nil
	}
	out := new(ResourceRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRoleParameters) DeepCopyInto(out *ResourceRoleParameters) {
	*out = *in
	if in.FilterIds != nil {
		in, out := &in.FilterIds, &out.FilterIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectIds != nil {
		in, out := &in.ProjectIds, &out.ProjectIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RoleIds != nil {
		in, out := &in.RoleIds, &out.RoleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRoleParameters.
func (in *ResourceRoleParameters) DeepCopy() *ResourceRoleParameters {
	if in == nil {
		return nil
	}
	out := new(ResourceRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesInitParameters) DeepCopyInto(out *ResourcesInitParameters) {
	*out = *in
	if in.MaxCPU != nil {
		in, out := &in.MaxCPU, &out.MaxCPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemInMb != nil {
		in, out := &in.MaxMemInMb, &out.MaxMemInMb
		*out = new(float64)
		**out = **in
	}
	if in.MaxStorageInGb != nil {
		in, out := &in.MaxStorageInGb, &out.MaxStorageInGb
		*out = new(float64)
		**out = **in
	}
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemInMb != nil {
		in, out := &in.MinMemInMb, &out.MinMemInMb
		*out = new(float64)
		**out = **in
	}
	if in.MinStorageInGb != nil {
		in, out := &in.MinStorageInGb, &out.MinStorageInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesInitParameters.
func (in *ResourcesInitParameters) DeepCopy() *ResourcesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResourcesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesObservation) DeepCopyInto(out *ResourcesObservation) {
	*out = *in
	if in.MaxCPU != nil {
		in, out := &in.MaxCPU, &out.MaxCPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemInMb != nil {
		in, out := &in.MaxMemInMb, &out.MaxMemInMb
		*out = new(float64)
		**out = **in
	}
	if in.MaxStorageInGb != nil {
		in, out := &in.MaxStorageInGb, &out.MaxStorageInGb
		*out = new(float64)
		**out = **in
	}
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemInMb != nil {
		in, out := &in.MinMemInMb, &out.MinMemInMb
		*out = new(float64)
		**out = **in
	}
	if in.MinStorageInGb != nil {
		in, out := &in.MinStorageInGb, &out.MinStorageInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesObservation.
func (in *ResourcesObservation) DeepCopy() *ResourcesObservation {
	if in == nil {
		return nil
	}
	out := new(ResourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcesParameters) DeepCopyInto(out *ResourcesParameters) {
	*out = *in
	if in.MaxCPU != nil {
		in, out := &in.MaxCPU, &out.MaxCPU
		*out = new(float64)
		**out = **in
	}
	if in.MaxMemInMb != nil {
		in, out := &in.MaxMemInMb, &out.MaxMemInMb
		*out = new(float64)
		**out = **in
	}
	if in.MaxStorageInGb != nil {
		in, out := &in.MaxStorageInGb, &out.MaxStorageInGb
		*out = new(float64)
		**out = **in
	}
	if in.MinCPU != nil {
		in, out := &in.MinCPU, &out.MinCPU
		*out = new(float64)
		**out = **in
	}
	if in.MinMemInMb != nil {
		in, out := &in.MinMemInMb, &out.MinMemInMb
		*out = new(float64)
		**out = **in
	}
	if in.MinStorageInGb != nil {
		in, out := &in.MinStorageInGb, &out.MinStorageInGb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcesParameters.
func (in *ResourcesParameters) DeepCopy() *ResourcesParameters {
	if in == nil {
		return nil
	}
	out := new(ResourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Role) DeepCopyInto(out *Role) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Role.
func (in *Role) DeepCopy() *Role {
	if in == nil {
		return nil
	}
	out := new(Role)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Role) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleInitParameters) DeepCopyInto(out *RoleInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleInitParameters.
func (in *RoleInitParameters) DeepCopy() *RoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleList) DeepCopyInto(out *RoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Role, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleList.
func (in *RoleList) DeepCopy() *RoleList {
	if in == nil {
		return nil
	}
	out := new(RoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleObservation) DeepCopyInto(out *RoleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleObservation.
func (in *RoleObservation) DeepCopy() *RoleObservation {
	if in == nil {
		return nil
	}
	out := new(RoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleParameters) DeepCopyInto(out *RoleParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleParameters.
func (in *RoleParameters) DeepCopy() *RoleParameters {
	if in == nil {
		return nil
	}
	out := new(RoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleSpec) DeepCopyInto(out *RoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleSpec.
func (in *RoleSpec) DeepCopy() *RoleSpec {
	if in == nil {
		return nil
	}
	out := new(RoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleStatus) DeepCopyInto(out *RoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleStatus.
func (in *RoleStatus) DeepCopy() *RoleStatus {
	if in == nil {
		return nil
	}
	out := new(RoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3InitParameters) DeepCopyInto(out *S3InitParameters) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.S3ForcePathStyle != nil {
		in, out := &in.S3ForcePathStyle, &out.S3ForcePathStyle
		*out = new(bool)
		**out = **in
	}
	if in.S3URL != nil {
		in, out := &in.S3URL, &out.S3URL
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3InitParameters.
func (in *S3InitParameters) DeepCopy() *S3InitParameters {
	if in == nil {
		return nil
	}
	out := new(S3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Observation) DeepCopyInto(out *S3Observation) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.S3ForcePathStyle != nil {
		in, out := &in.S3ForcePathStyle, &out.S3ForcePathStyle
		*out = new(bool)
		**out = **in
	}
	if in.S3URL != nil {
		in, out := &in.S3URL, &out.S3URL
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Observation.
func (in *S3Observation) DeepCopy() *S3Observation {
	if in == nil {
		return nil
	}
	out := new(S3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Parameters) DeepCopyInto(out *S3Parameters) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CredentialType != nil {
		in, out := &in.CredentialType, &out.CredentialType
		*out = new(string)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.S3ForcePathStyle != nil {
		in, out := &in.S3ForcePathStyle, &out.S3ForcePathStyle
		*out = new(bool)
		**out = **in
	}
	if in.S3URL != nil {
		in, out := &in.S3URL, &out.S3URL
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Parameters.
func (in *S3Parameters) DeepCopy() *S3Parameters {
	if in == nil {
		return nil
	}
	out := new(S3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKey) DeepCopyInto(out *SSHKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKey.
func (in *SSHKey) DeepCopy() *SSHKey {
	if in == nil {
		return nil
	}
	out := new(SSHKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSHKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyInitParameters) DeepCopyInto(out *SSHKeyInitParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.SSHKeySecretRef = in.SSHKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyInitParameters.
func (in *SSHKeyInitParameters) DeepCopy() *SSHKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SSHKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyList) DeepCopyInto(out *SSHKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SSHKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyList.
func (in *SSHKeyList) DeepCopy() *SSHKeyList {
	if in == nil {
		return nil
	}
	out := new(SSHKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSHKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyObservation) DeepCopyInto(out *SSHKeyObservation) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyObservation.
func (in *SSHKeyObservation) DeepCopy() *SSHKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SSHKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyParameters) DeepCopyInto(out *SSHKeyParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.SSHKeySecretRef = in.SSHKeySecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyParameters.
func (in *SSHKeyParameters) DeepCopy() *SSHKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SSHKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeySpec) DeepCopyInto(out *SSHKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeySpec.
func (in *SSHKeySpec) DeepCopy() *SSHKeySpec {
	if in == nil {
		return nil
	}
	out := new(SSHKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSHKeyStatus) DeepCopyInto(out *SSHKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSHKeyStatus.
func (in *SSHKeyStatus) DeepCopy() *SSHKeyStatus {
	if in == nil {
		return nil
	}
	out := new(SSHKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanPolicyInitParameters) DeepCopyInto(out *ScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanPolicyInitParameters.
func (in *ScanPolicyInitParameters) DeepCopy() *ScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanPolicyObservation) DeepCopyInto(out *ScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanPolicyObservation.
func (in *ScanPolicyObservation) DeepCopy() *ScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanPolicyParameters) DeepCopyInto(out *ScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanPolicyParameters.
func (in *ScanPolicyParameters) DeepCopy() *ScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectorInitParameters) DeepCopyInto(out *SelectorInitParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectorInitParameters.
func (in *SelectorInitParameters) DeepCopy() *SelectorInitParameters {
	if in == nil {
		return nil
	}
	out := new(SelectorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectorObservation) DeepCopyInto(out *SelectorObservation) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectorObservation.
func (in *SelectorObservation) DeepCopy() *SelectorObservation {
	if in == nil {
		return nil
	}
	out := new(SelectorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelectorParameters) DeepCopyInto(out *SelectorParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelectorParameters.
func (in *SelectorParameters) DeepCopy() *SelectorParameters {
	if in == nil {
		return nil
	}
	out := new(SelectorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecInitParameters) DeepCopyInto(out *SpecInitParameters) {
	*out = *in
	if in.FilterGroup != nil {
		in, out := &in.FilterGroup, &out.FilterGroup
		*out = make([]FilterGroupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecInitParameters.
func (in *SpecInitParameters) DeepCopy() *SpecInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecObservation) DeepCopyInto(out *SpecObservation) {
	*out = *in
	if in.FilterGroup != nil {
		in, out := &in.FilterGroup, &out.FilterGroup
		*out = make([]FilterGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecObservation.
func (in *SpecObservation) DeepCopy() *SpecObservation {
	if in == nil {
		return nil
	}
	out := new(SpecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecParameters) DeepCopyInto(out *SpecParameters) {
	*out = *in
	if in.FilterGroup != nil {
		in, out := &in.FilterGroup, &out.FilterGroup
		*out = make([]FilterGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecParameters.
func (in *SpecParameters) DeepCopy() *SpecParameters {
	if in == nil {
		return nil
	}
	out := new(SpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsInitParameters) DeepCopyInto(out *SubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsInitParameters.
func (in *SubjectsInitParameters) DeepCopy() *SubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsObservation) DeepCopyInto(out *SubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsObservation.
func (in *SubjectsObservation) DeepCopy() *SubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(SubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubjectsParameters) DeepCopyInto(out *SubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubjectsParameters.
func (in *SubjectsParameters) DeepCopy() *SubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(SubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfigInitParameters) DeepCopyInto(out *TLSConfigInitParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.InsecureSkipVerify != nil {
		in, out := &in.InsecureSkipVerify, &out.InsecureSkipVerify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfigInitParameters.
func (in *TLSConfigInitParameters) DeepCopy() *TLSConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfigObservation) DeepCopyInto(out *TLSConfigObservation) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.InsecureSkipVerify != nil {
		in, out := &in.InsecureSkipVerify, &out.InsecureSkipVerify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfigObservation.
func (in *TLSConfigObservation) DeepCopy() *TLSConfigObservation {
	if in == nil {
		return nil
	}
	out := new(TLSConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfigParameters) DeepCopyInto(out *TLSConfigParameters) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.InsecureSkipVerify != nil {
		in, out := &in.InsecureSkipVerify, &out.InsecureSkipVerify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfigParameters.
func (in *TLSConfigParameters) DeepCopy() *TLSConfigParameters {
	if in == nil {
		return nil
	}
	out := new(TLSConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsInitParameters) DeepCopyInto(out *TaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsInitParameters.
func (in *TaintsInitParameters) DeepCopy() *TaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsObservation) DeepCopyInto(out *TaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsObservation.
func (in *TaintsObservation) DeepCopy() *TaintsObservation {
	if in == nil {
		return nil
	}
	out := new(TaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsParameters) DeepCopyInto(out *TaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsParameters.
func (in *TaintsParameters) DeepCopy() *TaintsParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Team) DeepCopyInto(out *Team) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Team.
func (in *Team) DeepCopy() *Team {
	if in == nil {
		return nil
	}
	out := new(Team)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Team) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamInitParameters) DeepCopyInto(out *TeamInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectRoleMapping != nil {
		in, out := &in.ProjectRoleMapping, &out.ProjectRoleMapping
		*out = make([]ProjectRoleMappingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRoleMapping != nil {
		in, out := &in.TenantRoleMapping, &out.TenantRoleMapping
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WorkspaceRoleMapping != nil {
		in, out := &in.WorkspaceRoleMapping, &out.WorkspaceRoleMapping
		*out = make([]WorkspaceRoleMappingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamInitParameters.
func (in *TeamInitParameters) DeepCopy() *TeamInitParameters {
	if in == nil {
		return nil
	}
	out := new(TeamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamList) DeepCopyInto(out *TeamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Team, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamList.
func (in *TeamList) DeepCopy() *TeamList {
	if in == nil {
		return nil
	}
	out := new(TeamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TeamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamObservation) DeepCopyInto(out *TeamObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectRoleMapping != nil {
		in, out := &in.ProjectRoleMapping, &out.ProjectRoleMapping
		*out = make([]ProjectRoleMappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRoleMapping != nil {
		in, out := &in.TenantRoleMapping, &out.TenantRoleMapping
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WorkspaceRoleMapping != nil {
		in, out := &in.WorkspaceRoleMapping, &out.WorkspaceRoleMapping
		*out = make([]WorkspaceRoleMappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamObservation.
func (in *TeamObservation) DeepCopy() *TeamObservation {
	if in == nil {
		return nil
	}
	out := new(TeamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamParameters) DeepCopyInto(out *TeamParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectRoleMapping != nil {
		in, out := &in.ProjectRoleMapping, &out.ProjectRoleMapping
		*out = make([]ProjectRoleMappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TenantRoleMapping != nil {
		in, out := &in.TenantRoleMapping, &out.TenantRoleMapping
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WorkspaceRoleMapping != nil {
		in, out := &in.WorkspaceRoleMapping, &out.WorkspaceRoleMapping
		*out = make([]WorkspaceRoleMappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamParameters.
func (in *TeamParameters) DeepCopy() *TeamParameters {
	if in == nil {
		return nil
	}
	out := new(TeamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSpec) DeepCopyInto(out *TeamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSpec.
func (in *TeamSpec) DeepCopy() *TeamSpec {
	if in == nil {
		return nil
	}
	out := new(TeamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamStatus) DeepCopyInto(out *TeamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamStatus.
func (in *TeamStatus) DeepCopy() *TeamStatus {
	if in == nil {
		return nil
	}
	out := new(TeamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitParameters) DeepCopyInto(out *UserInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	if in.ProjectRole != nil {
		in, out := &in.ProjectRole, &out.ProjectRole
		*out = make([]ProjectRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceRole != nil {
		in, out := &in.ResourceRole, &out.ResourceRole
		*out = make([]ResourceRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TeamIds != nil {
		in, out := &in.TeamIds, &out.TeamIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantRole != nil {
		in, out := &in.TenantRole, &out.TenantRole
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WorkspaceRole != nil {
		in, out := &in.WorkspaceRole, &out.WorkspaceRole
		*out = make([]WorkspaceRoleInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitParameters.
func (in *UserInitParameters) DeepCopy() *UserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserObservation) DeepCopyInto(out *UserObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	if in.ProjectRole != nil {
		in, out := &in.ProjectRole, &out.ProjectRole
		*out = make([]ProjectRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceRole != nil {
		in, out := &in.ResourceRole, &out.ResourceRole
		*out = make([]ResourceRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TeamIds != nil {
		in, out := &in.TeamIds, &out.TeamIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantRole != nil {
		in, out := &in.TenantRole, &out.TenantRole
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WorkspaceRole != nil {
		in, out := &in.WorkspaceRole, &out.WorkspaceRole
		*out = make([]WorkspaceRoleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserObservation.
func (in *UserObservation) DeepCopy() *UserObservation {
	if in == nil {
		return nil
	}
	out := new(UserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserParameters) DeepCopyInto(out *UserParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	if in.ProjectRole != nil {
		in, out := &in.ProjectRole, &out.ProjectRole
		*out = make([]ProjectRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceRole != nil {
		in, out := &in.ResourceRole, &out.ResourceRole
		*out = make([]ResourceRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TeamIds != nil {
		in, out := &in.TeamIds, &out.TeamIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantRole != nil {
		in, out := &in.TenantRole, &out.TenantRole
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.WorkspaceRole != nil {
		in, out := &in.WorkspaceRole, &out.WorkspaceRole
		*out = make([]WorkspaceRoleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserParameters.
func (in *UserParameters) DeepCopy() *UserParameters {
	if in == nil {
		return nil
	}
	out := new(UserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereCloudAccount) DeepCopyInto(out *VSphereCloudAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereCloudAccount.
func (in *VSphereCloudAccount) DeepCopy() *VSphereCloudAccount {
	if in == nil {
		return nil
	}
	out := new(VSphereCloudAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereCloudAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereCloudAccountInitParameters) DeepCopyInto(out *VSphereCloudAccountInitParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VsphereIgnoreInsecureError != nil {
		in, out := &in.VsphereIgnoreInsecureError, &out.VsphereIgnoreInsecureError
		*out = new(bool)
		**out = **in
	}
	out.VspherePasswordSecretRef = in.VspherePasswordSecretRef
	if in.VsphereUsername != nil {
		in, out := &in.VsphereUsername, &out.VsphereUsername
		*out = new(string)
		**out = **in
	}
	if in.VsphereVcenter != nil {
		in, out := &in.VsphereVcenter, &out.VsphereVcenter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereCloudAccountInitParameters.
func (in *VSphereCloudAccountInitParameters) DeepCopy() *VSphereCloudAccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereCloudAccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereCloudAccountList) DeepCopyInto(out *VSphereCloudAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereCloudAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereCloudAccountList.
func (in *VSphereCloudAccountList) DeepCopy() *VSphereCloudAccountList {
	if in == nil {
		return nil
	}
	out := new(VSphereCloudAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereCloudAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereCloudAccountObservation) DeepCopyInto(out *VSphereCloudAccountObservation) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VsphereIgnoreInsecureError != nil {
		in, out := &in.VsphereIgnoreInsecureError, &out.VsphereIgnoreInsecureError
		*out = new(bool)
		**out = **in
	}
	if in.VsphereUsername != nil {
		in, out := &in.VsphereUsername, &out.VsphereUsername
		*out = new(string)
		**out = **in
	}
	if in.VsphereVcenter != nil {
		in, out := &in.VsphereVcenter, &out.VsphereVcenter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereCloudAccountObservation.
func (in *VSphereCloudAccountObservation) DeepCopy() *VSphereCloudAccountObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereCloudAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereCloudAccountParameters) DeepCopyInto(out *VSphereCloudAccountParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateCloudGatewayID != nil {
		in, out := &in.PrivateCloudGatewayID, &out.PrivateCloudGatewayID
		*out = new(string)
		**out = **in
	}
	if in.VsphereIgnoreInsecureError != nil {
		in, out := &in.VsphereIgnoreInsecureError, &out.VsphereIgnoreInsecureError
		*out = new(bool)
		**out = **in
	}
	out.VspherePasswordSecretRef = in.VspherePasswordSecretRef
	if in.VsphereUsername != nil {
		in, out := &in.VsphereUsername, &out.VsphereUsername
		*out = new(string)
		**out = **in
	}
	if in.VsphereVcenter != nil {
		in, out := &in.VsphereVcenter, &out.VsphereVcenter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereCloudAccountParameters.
func (in *VSphereCloudAccountParameters) DeepCopy() *VSphereCloudAccountParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereCloudAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereCloudAccountSpec) DeepCopyInto(out *VSphereCloudAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereCloudAccountSpec.
func (in *VSphereCloudAccountSpec) DeepCopy() *VSphereCloudAccountSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereCloudAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereCloudAccountStatus) DeepCopyInto(out *VSphereCloudAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereCloudAccountStatus.
func (in *VSphereCloudAccountStatus) DeepCopy() *VSphereCloudAccountStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereCloudAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereCluster) DeepCopyInto(out *VSphereCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereCluster.
func (in *VSphereCluster) DeepCopy() *VSphereCluster {
	if in == nil {
		return nil
	}
	out := new(VSphereCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterBackupPolicyInitParameters) DeepCopyInto(out *VSphereClusterBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterBackupPolicyInitParameters.
func (in *VSphereClusterBackupPolicyInitParameters) DeepCopy() *VSphereClusterBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterBackupPolicyObservation) DeepCopyInto(out *VSphereClusterBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterBackupPolicyObservation.
func (in *VSphereClusterBackupPolicyObservation) DeepCopy() *VSphereClusterBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterBackupPolicyParameters) DeepCopyInto(out *VSphereClusterBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterBackupPolicyParameters.
func (in *VSphereClusterBackupPolicyParameters) DeepCopy() *VSphereClusterBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterCloudConfigInitParameters) DeepCopyInto(out *VSphereClusterCloudConfigInitParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HostEndpoint != nil {
		in, out := &in.HostEndpoint, &out.HostEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ImageTemplateFolder != nil {
		in, out := &in.ImageTemplateFolder, &out.ImageTemplateFolder
		*out = new(string)
		**out = **in
	}
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterCloudConfigInitParameters.
func (in *VSphereClusterCloudConfigInitParameters) DeepCopy() *VSphereClusterCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterCloudConfigObservation) DeepCopyInto(out *VSphereClusterCloudConfigObservation) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HostEndpoint != nil {
		in, out := &in.HostEndpoint, &out.HostEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ImageTemplateFolder != nil {
		in, out := &in.ImageTemplateFolder, &out.ImageTemplateFolder
		*out = new(string)
		**out = **in
	}
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterCloudConfigObservation.
func (in *VSphereClusterCloudConfigObservation) DeepCopy() *VSphereClusterCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterCloudConfigParameters) DeepCopyInto(out *VSphereClusterCloudConfigParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.HostEndpoint != nil {
		in, out := &in.HostEndpoint, &out.HostEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ImageTemplateFolder != nil {
		in, out := &in.ImageTemplateFolder, &out.ImageTemplateFolder
		*out = new(string)
		**out = **in
	}
	if in.NetworkSearchDomain != nil {
		in, out := &in.NetworkSearchDomain, &out.NetworkSearchDomain
		*out = new(string)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.NtpServers != nil {
		in, out := &in.NtpServers, &out.NtpServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKey != nil {
		in, out := &in.SSHKey, &out.SSHKey
		*out = new(string)
		**out = **in
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StaticIP != nil {
		in, out := &in.StaticIP, &out.StaticIP
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterCloudConfigParameters.
func (in *VSphereClusterCloudConfigParameters) DeepCopy() *VSphereClusterCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterProfileInitParameters) DeepCopyInto(out *VSphereClusterClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]VSphereClusterClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterProfileInitParameters.
func (in *VSphereClusterClusterProfileInitParameters) DeepCopy() *VSphereClusterClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterProfileObservation) DeepCopyInto(out *VSphereClusterClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]VSphereClusterClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterProfileObservation.
func (in *VSphereClusterClusterProfileObservation) DeepCopy() *VSphereClusterClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterProfilePackInitParameters) DeepCopyInto(out *VSphereClusterClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]VSphereClusterClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterProfilePackInitParameters.
func (in *VSphereClusterClusterProfilePackInitParameters) DeepCopy() *VSphereClusterClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterProfilePackManifestInitParameters) DeepCopyInto(out *VSphereClusterClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterProfilePackManifestInitParameters.
func (in *VSphereClusterClusterProfilePackManifestInitParameters) DeepCopy() *VSphereClusterClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterProfilePackManifestObservation) DeepCopyInto(out *VSphereClusterClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterProfilePackManifestObservation.
func (in *VSphereClusterClusterProfilePackManifestObservation) DeepCopy() *VSphereClusterClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterProfilePackManifestParameters) DeepCopyInto(out *VSphereClusterClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterProfilePackManifestParameters.
func (in *VSphereClusterClusterProfilePackManifestParameters) DeepCopy() *VSphereClusterClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterProfilePackObservation) DeepCopyInto(out *VSphereClusterClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]VSphereClusterClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterProfilePackObservation.
func (in *VSphereClusterClusterProfilePackObservation) DeepCopy() *VSphereClusterClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterProfilePackParameters) DeepCopyInto(out *VSphereClusterClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]VSphereClusterClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterProfilePackParameters.
func (in *VSphereClusterClusterProfilePackParameters) DeepCopy() *VSphereClusterClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterProfileParameters) DeepCopyInto(out *VSphereClusterClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]VSphereClusterClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterProfileParameters.
func (in *VSphereClusterClusterProfileParameters) DeepCopy() *VSphereClusterClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterRbacBindingInitParameters) DeepCopyInto(out *VSphereClusterClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]VSphereClusterClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterRbacBindingInitParameters.
func (in *VSphereClusterClusterRbacBindingInitParameters) DeepCopy() *VSphereClusterClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterRbacBindingObservation) DeepCopyInto(out *VSphereClusterClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]VSphereClusterClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterRbacBindingObservation.
func (in *VSphereClusterClusterRbacBindingObservation) DeepCopy() *VSphereClusterClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterRbacBindingParameters) DeepCopyInto(out *VSphereClusterClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]VSphereClusterClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterRbacBindingParameters.
func (in *VSphereClusterClusterRbacBindingParameters) DeepCopy() *VSphereClusterClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *VSphereClusterClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterRbacBindingSubjectsInitParameters.
func (in *VSphereClusterClusterRbacBindingSubjectsInitParameters) DeepCopy() *VSphereClusterClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterRbacBindingSubjectsObservation) DeepCopyInto(out *VSphereClusterClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterRbacBindingSubjectsObservation.
func (in *VSphereClusterClusterRbacBindingSubjectsObservation) DeepCopy() *VSphereClusterClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterClusterRbacBindingSubjectsParameters) DeepCopyInto(out *VSphereClusterClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterClusterRbacBindingSubjectsParameters.
func (in *VSphereClusterClusterRbacBindingSubjectsParameters) DeepCopy() *VSphereClusterClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterHostConfigInitParameters) DeepCopyInto(out *VSphereClusterHostConfigInitParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterHostConfigInitParameters.
func (in *VSphereClusterHostConfigInitParameters) DeepCopy() *VSphereClusterHostConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterHostConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterHostConfigObservation) DeepCopyInto(out *VSphereClusterHostConfigObservation) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterHostConfigObservation.
func (in *VSphereClusterHostConfigObservation) DeepCopy() *VSphereClusterHostConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterHostConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterHostConfigParameters) DeepCopyInto(out *VSphereClusterHostConfigParameters) {
	*out = *in
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(string)
		**out = **in
	}
	if in.HostEndpointType != nil {
		in, out := &in.HostEndpointType, &out.HostEndpointType
		*out = new(string)
		**out = **in
	}
	if in.IngressHost != nil {
		in, out := &in.IngressHost, &out.IngressHost
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterHostConfigParameters.
func (in *VSphereClusterHostConfigParameters) DeepCopy() *VSphereClusterHostConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterHostConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterInitParameters) DeepCopyInto(out *VSphereClusterInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]VSphereClusterBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]VSphereClusterCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]VSphereClusterClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]VSphereClusterClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]VSphereClusterHostConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]VSphereClusterLocationConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]VSphereClusterMachinePoolInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]VSphereClusterNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]VSphereClusterScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterInitParameters.
func (in *VSphereClusterInitParameters) DeepCopy() *VSphereClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterList) DeepCopyInto(out *VSphereClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VSphereCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterList.
func (in *VSphereClusterList) DeepCopy() *VSphereClusterList {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VSphereClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterLocationConfigInitParameters) DeepCopyInto(out *VSphereClusterLocationConfigInitParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterLocationConfigInitParameters.
func (in *VSphereClusterLocationConfigInitParameters) DeepCopy() *VSphereClusterLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterLocationConfigObservation) DeepCopyInto(out *VSphereClusterLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterLocationConfigObservation.
func (in *VSphereClusterLocationConfigObservation) DeepCopy() *VSphereClusterLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterLocationConfigParameters) DeepCopyInto(out *VSphereClusterLocationConfigParameters) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterLocationConfigParameters.
func (in *VSphereClusterLocationConfigParameters) DeepCopy() *VSphereClusterLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterMachinePoolInitParameters) DeepCopyInto(out *VSphereClusterMachinePoolInitParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]InstanceTypeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]VSphereClusterMachinePoolNodeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]VSphereClusterMachinePoolTaintsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterMachinePoolInitParameters.
func (in *VSphereClusterMachinePoolInitParameters) DeepCopy() *VSphereClusterMachinePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterMachinePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterMachinePoolNodeInitParameters) DeepCopyInto(out *VSphereClusterMachinePoolNodeInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterMachinePoolNodeInitParameters.
func (in *VSphereClusterMachinePoolNodeInitParameters) DeepCopy() *VSphereClusterMachinePoolNodeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterMachinePoolNodeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterMachinePoolNodeObservation) DeepCopyInto(out *VSphereClusterMachinePoolNodeObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterMachinePoolNodeObservation.
func (in *VSphereClusterMachinePoolNodeObservation) DeepCopy() *VSphereClusterMachinePoolNodeObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterMachinePoolNodeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterMachinePoolNodeParameters) DeepCopyInto(out *VSphereClusterMachinePoolNodeParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterMachinePoolNodeParameters.
func (in *VSphereClusterMachinePoolNodeParameters) DeepCopy() *VSphereClusterMachinePoolNodeParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterMachinePoolNodeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterMachinePoolObservation) DeepCopyInto(out *VSphereClusterMachinePoolObservation) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]InstanceTypeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]VSphereClusterMachinePoolNodeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]VSphereClusterMachinePoolTaintsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterMachinePoolObservation.
func (in *VSphereClusterMachinePoolObservation) DeepCopy() *VSphereClusterMachinePoolObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterMachinePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterMachinePoolParameters) DeepCopyInto(out *VSphereClusterMachinePoolParameters) {
	*out = *in
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ControlPlane != nil {
		in, out := &in.ControlPlane, &out.ControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.ControlPlaneAsWorker != nil {
		in, out := &in.ControlPlaneAsWorker, &out.ControlPlaneAsWorker
		*out = new(bool)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = make([]InstanceTypeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Node != nil {
		in, out := &in.Node, &out.Node
		*out = make([]VSphereClusterMachinePoolNodeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRepaveInterval != nil {
		in, out := &in.NodeRepaveInterval, &out.NodeRepaveInterval
		*out = new(float64)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = make([]PlacementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]VSphereClusterMachinePoolTaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterMachinePoolParameters.
func (in *VSphereClusterMachinePoolParameters) DeepCopy() *VSphereClusterMachinePoolParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterMachinePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterMachinePoolTaintsInitParameters) DeepCopyInto(out *VSphereClusterMachinePoolTaintsInitParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterMachinePoolTaintsInitParameters.
func (in *VSphereClusterMachinePoolTaintsInitParameters) DeepCopy() *VSphereClusterMachinePoolTaintsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterMachinePoolTaintsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterMachinePoolTaintsObservation) DeepCopyInto(out *VSphereClusterMachinePoolTaintsObservation) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterMachinePoolTaintsObservation.
func (in *VSphereClusterMachinePoolTaintsObservation) DeepCopy() *VSphereClusterMachinePoolTaintsObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterMachinePoolTaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterMachinePoolTaintsParameters) DeepCopyInto(out *VSphereClusterMachinePoolTaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterMachinePoolTaintsParameters.
func (in *VSphereClusterMachinePoolTaintsParameters) DeepCopy() *VSphereClusterMachinePoolTaintsParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterMachinePoolTaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterNamespacesInitParameters) DeepCopyInto(out *VSphereClusterNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterNamespacesInitParameters.
func (in *VSphereClusterNamespacesInitParameters) DeepCopy() *VSphereClusterNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterNamespacesObservation) DeepCopyInto(out *VSphereClusterNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterNamespacesObservation.
func (in *VSphereClusterNamespacesObservation) DeepCopy() *VSphereClusterNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterNamespacesParameters) DeepCopyInto(out *VSphereClusterNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterNamespacesParameters.
func (in *VSphereClusterNamespacesParameters) DeepCopy() *VSphereClusterNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterObservation) DeepCopyInto(out *VSphereClusterObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]VSphereClusterBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]VSphereClusterCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]VSphereClusterClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]VSphereClusterClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]VSphereClusterHostConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]VSphereClusterLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]VSphereClusterMachinePoolObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]VSphereClusterNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]VSphereClusterScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterObservation.
func (in *VSphereClusterObservation) DeepCopy() *VSphereClusterObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterParameters) DeepCopyInto(out *VSphereClusterParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]VSphereClusterBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudAccountID != nil {
		in, out := &in.CloudAccountID, &out.CloudAccountID
		*out = new(string)
		**out = **in
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]VSphereClusterCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMetaAttribute != nil {
		in, out := &in.ClusterMetaAttribute, &out.ClusterMetaAttribute
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]VSphereClusterClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]VSphereClusterClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make([]VSphereClusterHostConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]VSphereClusterLocationConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MachinePool != nil {
		in, out := &in.MachinePool, &out.MachinePool
		*out = make([]VSphereClusterMachinePoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]VSphereClusterNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseAgentUpgrades != nil {
		in, out := &in.PauseAgentUpgrades, &out.PauseAgentUpgrades
		*out = new(string)
		**out = **in
	}
	if in.ReviewRepaveState != nil {
		in, out := &in.ReviewRepaveState, &out.ReviewRepaveState
		*out = new(string)
		**out = **in
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]VSphereClusterScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterParameters.
func (in *VSphereClusterParameters) DeepCopy() *VSphereClusterParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterScanPolicyInitParameters) DeepCopyInto(out *VSphereClusterScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterScanPolicyInitParameters.
func (in *VSphereClusterScanPolicyInitParameters) DeepCopy() *VSphereClusterScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterScanPolicyObservation) DeepCopyInto(out *VSphereClusterScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterScanPolicyObservation.
func (in *VSphereClusterScanPolicyObservation) DeepCopy() *VSphereClusterScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterScanPolicyParameters) DeepCopyInto(out *VSphereClusterScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterScanPolicyParameters.
func (in *VSphereClusterScanPolicyParameters) DeepCopy() *VSphereClusterScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterSpec) DeepCopyInto(out *VSphereClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterSpec.
func (in *VSphereClusterSpec) DeepCopy() *VSphereClusterSpec {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VSphereClusterStatus) DeepCopyInto(out *VSphereClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VSphereClusterStatus.
func (in *VSphereClusterStatus) DeepCopy() *VSphereClusterStatus {
	if in == nil {
		return nil
	}
	out := new(VSphereClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableInitParameters) DeepCopyInto(out *VariableInitParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.Immutable != nil {
		in, out := &in.Immutable, &out.Immutable
		*out = new(bool)
		**out = **in
	}
	if in.IsSensitive != nil {
		in, out := &in.IsSensitive, &out.IsSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableInitParameters.
func (in *VariableInitParameters) DeepCopy() *VariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(VariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableObservation) DeepCopyInto(out *VariableObservation) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.Immutable != nil {
		in, out := &in.Immutable, &out.Immutable
		*out = new(bool)
		**out = **in
	}
	if in.IsSensitive != nil {
		in, out := &in.IsSensitive, &out.IsSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableObservation.
func (in *VariableObservation) DeepCopy() *VariableObservation {
	if in == nil {
		return nil
	}
	out := new(VariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableParameters) DeepCopyInto(out *VariableParameters) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.Immutable != nil {
		in, out := &in.Immutable, &out.Immutable
		*out = new(bool)
		**out = **in
	}
	if in.IsSensitive != nil {
		in, out := &in.IsSensitive, &out.IsSensitive
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Regex != nil {
		in, out := &in.Regex, &out.Regex
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableParameters.
func (in *VariableParameters) DeepCopy() *VariableParameters {
	if in == nil {
		return nil
	}
	out := new(VariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCluster) DeepCopyInto(out *VirtualCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCluster.
func (in *VirtualCluster) DeepCopy() *VirtualCluster {
	if in == nil {
		return nil
	}
	out := new(VirtualCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterBackupPolicyInitParameters) DeepCopyInto(out *VirtualClusterBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterBackupPolicyInitParameters.
func (in *VirtualClusterBackupPolicyInitParameters) DeepCopy() *VirtualClusterBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterBackupPolicyObservation) DeepCopyInto(out *VirtualClusterBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterBackupPolicyObservation.
func (in *VirtualClusterBackupPolicyObservation) DeepCopy() *VirtualClusterBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterBackupPolicyParameters) DeepCopyInto(out *VirtualClusterBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterBackupPolicyParameters.
func (in *VirtualClusterBackupPolicyParameters) DeepCopy() *VirtualClusterBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterCloudConfigInitParameters) DeepCopyInto(out *VirtualClusterCloudConfigInitParameters) {
	*out = *in
	if in.ChartName != nil {
		in, out := &in.ChartName, &out.ChartName
		*out = new(string)
		**out = **in
	}
	if in.ChartRepo != nil {
		in, out := &in.ChartRepo, &out.ChartRepo
		*out = new(string)
		**out = **in
	}
	if in.ChartValues != nil {
		in, out := &in.ChartValues, &out.ChartValues
		*out = new(string)
		**out = **in
	}
	if in.ChartVersion != nil {
		in, out := &in.ChartVersion, &out.ChartVersion
		*out = new(string)
		**out = **in
	}
	if in.K8SVersion != nil {
		in, out := &in.K8SVersion, &out.K8SVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterCloudConfigInitParameters.
func (in *VirtualClusterCloudConfigInitParameters) DeepCopy() *VirtualClusterCloudConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterCloudConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterCloudConfigObservation) DeepCopyInto(out *VirtualClusterCloudConfigObservation) {
	*out = *in
	if in.ChartName != nil {
		in, out := &in.ChartName, &out.ChartName
		*out = new(string)
		**out = **in
	}
	if in.ChartRepo != nil {
		in, out := &in.ChartRepo, &out.ChartRepo
		*out = new(string)
		**out = **in
	}
	if in.ChartValues != nil {
		in, out := &in.ChartValues, &out.ChartValues
		*out = new(string)
		**out = **in
	}
	if in.ChartVersion != nil {
		in, out := &in.ChartVersion, &out.ChartVersion
		*out = new(string)
		**out = **in
	}
	if in.K8SVersion != nil {
		in, out := &in.K8SVersion, &out.K8SVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterCloudConfigObservation.
func (in *VirtualClusterCloudConfigObservation) DeepCopy() *VirtualClusterCloudConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterCloudConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterCloudConfigParameters) DeepCopyInto(out *VirtualClusterCloudConfigParameters) {
	*out = *in
	if in.ChartName != nil {
		in, out := &in.ChartName, &out.ChartName
		*out = new(string)
		**out = **in
	}
	if in.ChartRepo != nil {
		in, out := &in.ChartRepo, &out.ChartRepo
		*out = new(string)
		**out = **in
	}
	if in.ChartValues != nil {
		in, out := &in.ChartValues, &out.ChartValues
		*out = new(string)
		**out = **in
	}
	if in.ChartVersion != nil {
		in, out := &in.ChartVersion, &out.ChartVersion
		*out = new(string)
		**out = **in
	}
	if in.K8SVersion != nil {
		in, out := &in.K8SVersion, &out.K8SVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterCloudConfigParameters.
func (in *VirtualClusterCloudConfigParameters) DeepCopy() *VirtualClusterCloudConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterCloudConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterProfileInitParameters) DeepCopyInto(out *VirtualClusterClusterProfileInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]VirtualClusterClusterProfilePackInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterProfileInitParameters.
func (in *VirtualClusterClusterProfileInitParameters) DeepCopy() *VirtualClusterClusterProfileInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterProfileInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterProfileObservation) DeepCopyInto(out *VirtualClusterClusterProfileObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]VirtualClusterClusterProfilePackObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterProfileObservation.
func (in *VirtualClusterClusterProfileObservation) DeepCopy() *VirtualClusterClusterProfileObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterProfileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterProfilePackInitParameters) DeepCopyInto(out *VirtualClusterClusterProfilePackInitParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]VirtualClusterClusterProfilePackManifestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterProfilePackInitParameters.
func (in *VirtualClusterClusterProfilePackInitParameters) DeepCopy() *VirtualClusterClusterProfilePackInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterProfilePackInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterProfilePackManifestInitParameters) DeepCopyInto(out *VirtualClusterClusterProfilePackManifestInitParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterProfilePackManifestInitParameters.
func (in *VirtualClusterClusterProfilePackManifestInitParameters) DeepCopy() *VirtualClusterClusterProfilePackManifestInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterProfilePackManifestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterProfilePackManifestObservation) DeepCopyInto(out *VirtualClusterClusterProfilePackManifestObservation) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterProfilePackManifestObservation.
func (in *VirtualClusterClusterProfilePackManifestObservation) DeepCopy() *VirtualClusterClusterProfilePackManifestObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterProfilePackManifestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterProfilePackManifestParameters) DeepCopyInto(out *VirtualClusterClusterProfilePackManifestParameters) {
	*out = *in
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterProfilePackManifestParameters.
func (in *VirtualClusterClusterProfilePackManifestParameters) DeepCopy() *VirtualClusterClusterProfilePackManifestParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterProfilePackManifestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterProfilePackObservation) DeepCopyInto(out *VirtualClusterClusterProfilePackObservation) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]VirtualClusterClusterProfilePackManifestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterProfilePackObservation.
func (in *VirtualClusterClusterProfilePackObservation) DeepCopy() *VirtualClusterClusterProfilePackObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterProfilePackObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterProfilePackParameters) DeepCopyInto(out *VirtualClusterClusterProfilePackParameters) {
	*out = *in
	if in.Manifest != nil {
		in, out := &in.Manifest, &out.Manifest
		*out = make([]VirtualClusterClusterProfilePackManifestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistryUID != nil {
		in, out := &in.RegistryUID, &out.RegistryUID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterProfilePackParameters.
func (in *VirtualClusterClusterProfilePackParameters) DeepCopy() *VirtualClusterClusterProfilePackParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterProfilePackParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterProfileParameters) DeepCopyInto(out *VirtualClusterClusterProfileParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Pack != nil {
		in, out := &in.Pack, &out.Pack
		*out = make([]VirtualClusterClusterProfilePackParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterProfileParameters.
func (in *VirtualClusterClusterProfileParameters) DeepCopy() *VirtualClusterClusterProfileParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterProfileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterRbacBindingInitParameters) DeepCopyInto(out *VirtualClusterClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]VirtualClusterClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterRbacBindingInitParameters.
func (in *VirtualClusterClusterRbacBindingInitParameters) DeepCopy() *VirtualClusterClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterRbacBindingObservation) DeepCopyInto(out *VirtualClusterClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]VirtualClusterClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterRbacBindingObservation.
func (in *VirtualClusterClusterRbacBindingObservation) DeepCopy() *VirtualClusterClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterRbacBindingParameters) DeepCopyInto(out *VirtualClusterClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]VirtualClusterClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterRbacBindingParameters.
func (in *VirtualClusterClusterRbacBindingParameters) DeepCopy() *VirtualClusterClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *VirtualClusterClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterRbacBindingSubjectsInitParameters.
func (in *VirtualClusterClusterRbacBindingSubjectsInitParameters) DeepCopy() *VirtualClusterClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterRbacBindingSubjectsObservation) DeepCopyInto(out *VirtualClusterClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterRbacBindingSubjectsObservation.
func (in *VirtualClusterClusterRbacBindingSubjectsObservation) DeepCopy() *VirtualClusterClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterRbacBindingSubjectsParameters) DeepCopyInto(out *VirtualClusterClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterRbacBindingSubjectsParameters.
func (in *VirtualClusterClusterRbacBindingSubjectsParameters) DeepCopy() *VirtualClusterClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterInitParameters) DeepCopyInto(out *VirtualClusterInitParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]VirtualClusterBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]VirtualClusterCloudConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroupUID != nil {
		in, out := &in.ClusterGroupUID, &out.ClusterGroupUID
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]VirtualClusterClusterProfileInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]VirtualClusterClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostClusterUID != nil {
		in, out := &in.HostClusterUID, &out.HostClusterUID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]VirtualClusterNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseCluster != nil {
		in, out := &in.PauseCluster, &out.PauseCluster
		*out = new(bool)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]ResourcesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]VirtualClusterScanPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterInitParameters.
func (in *VirtualClusterInitParameters) DeepCopy() *VirtualClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterList) DeepCopyInto(out *VirtualClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterList.
func (in *VirtualClusterList) DeepCopy() *VirtualClusterList {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterLocationConfigInitParameters) DeepCopyInto(out *VirtualClusterLocationConfigInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterLocationConfigInitParameters.
func (in *VirtualClusterLocationConfigInitParameters) DeepCopy() *VirtualClusterLocationConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterLocationConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterLocationConfigObservation) DeepCopyInto(out *VirtualClusterLocationConfigObservation) {
	*out = *in
	if in.CountryCode != nil {
		in, out := &in.CountryCode, &out.CountryCode
		*out = new(string)
		**out = **in
	}
	if in.CountryName != nil {
		in, out := &in.CountryName, &out.CountryName
		*out = new(string)
		**out = **in
	}
	if in.Latitude != nil {
		in, out := &in.Latitude, &out.Latitude
		*out = new(float64)
		**out = **in
	}
	if in.Longitude != nil {
		in, out := &in.Longitude, &out.Longitude
		*out = new(float64)
		**out = **in
	}
	if in.RegionCode != nil {
		in, out := &in.RegionCode, &out.RegionCode
		*out = new(string)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterLocationConfigObservation.
func (in *VirtualClusterLocationConfigObservation) DeepCopy() *VirtualClusterLocationConfigObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterLocationConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterLocationConfigParameters) DeepCopyInto(out *VirtualClusterLocationConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterLocationConfigParameters.
func (in *VirtualClusterLocationConfigParameters) DeepCopy() *VirtualClusterLocationConfigParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterLocationConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterNamespacesInitParameters) DeepCopyInto(out *VirtualClusterNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterNamespacesInitParameters.
func (in *VirtualClusterNamespacesInitParameters) DeepCopy() *VirtualClusterNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterNamespacesObservation) DeepCopyInto(out *VirtualClusterNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterNamespacesObservation.
func (in *VirtualClusterNamespacesObservation) DeepCopy() *VirtualClusterNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterNamespacesParameters) DeepCopyInto(out *VirtualClusterNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterNamespacesParameters.
func (in *VirtualClusterNamespacesParameters) DeepCopy() *VirtualClusterNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterObservation) DeepCopyInto(out *VirtualClusterObservation) {
	*out = *in
	if in.AdminKubeConfig != nil {
		in, out := &in.AdminKubeConfig, &out.AdminKubeConfig
		*out = new(string)
		**out = **in
	}
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]VirtualClusterBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]VirtualClusterCloudConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfigID != nil {
		in, out := &in.CloudConfigID, &out.CloudConfigID
		*out = new(string)
		**out = **in
	}
	if in.ClusterGroupUID != nil {
		in, out := &in.ClusterGroupUID, &out.ClusterGroupUID
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]VirtualClusterClusterProfileObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]VirtualClusterClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostClusterUID != nil {
		in, out := &in.HostClusterUID, &out.HostClusterUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Kubeconfig != nil {
		in, out := &in.Kubeconfig, &out.Kubeconfig
		*out = new(string)
		**out = **in
	}
	if in.LocationConfig != nil {
		in, out := &in.LocationConfig, &out.LocationConfig
		*out = make([]VirtualClusterLocationConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]VirtualClusterNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseCluster != nil {
		in, out := &in.PauseCluster, &out.PauseCluster
		*out = new(bool)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]ResourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]VirtualClusterScanPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterObservation.
func (in *VirtualClusterObservation) DeepCopy() *VirtualClusterObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterParameters) DeepCopyInto(out *VirtualClusterParameters) {
	*out = *in
	if in.ApplySetting != nil {
		in, out := &in.ApplySetting, &out.ApplySetting
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]VirtualClusterBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudConfig != nil {
		in, out := &in.CloudConfig, &out.CloudConfig
		*out = make([]VirtualClusterCloudConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterGroupUID != nil {
		in, out := &in.ClusterGroupUID, &out.ClusterGroupUID
		*out = new(string)
		**out = **in
	}
	if in.ClusterProfile != nil {
		in, out := &in.ClusterProfile, &out.ClusterProfile
		*out = make([]VirtualClusterClusterProfileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]VirtualClusterClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ForceDelete != nil {
		in, out := &in.ForceDelete, &out.ForceDelete
		*out = new(bool)
		**out = **in
	}
	if in.ForceDeleteDelay != nil {
		in, out := &in.ForceDeleteDelay, &out.ForceDeleteDelay
		*out = new(float64)
		**out = **in
	}
	if in.HostClusterUID != nil {
		in, out := &in.HostClusterUID, &out.HostClusterUID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]VirtualClusterNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OsPatchAfter != nil {
		in, out := &in.OsPatchAfter, &out.OsPatchAfter
		*out = new(string)
		**out = **in
	}
	if in.OsPatchOnBoot != nil {
		in, out := &in.OsPatchOnBoot, &out.OsPatchOnBoot
		*out = new(bool)
		**out = **in
	}
	if in.OsPatchSchedule != nil {
		in, out := &in.OsPatchSchedule, &out.OsPatchSchedule
		*out = new(string)
		**out = **in
	}
	if in.PauseCluster != nil {
		in, out := &in.PauseCluster, &out.PauseCluster
		*out = new(bool)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]ResourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScanPolicy != nil {
		in, out := &in.ScanPolicy, &out.ScanPolicy
		*out = make([]VirtualClusterScanPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkipCompletion != nil {
		in, out := &in.SkipCompletion, &out.SkipCompletion
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterParameters.
func (in *VirtualClusterParameters) DeepCopy() *VirtualClusterParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterScanPolicyInitParameters) DeepCopyInto(out *VirtualClusterScanPolicyInitParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterScanPolicyInitParameters.
func (in *VirtualClusterScanPolicyInitParameters) DeepCopy() *VirtualClusterScanPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterScanPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterScanPolicyObservation) DeepCopyInto(out *VirtualClusterScanPolicyObservation) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterScanPolicyObservation.
func (in *VirtualClusterScanPolicyObservation) DeepCopy() *VirtualClusterScanPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterScanPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterScanPolicyParameters) DeepCopyInto(out *VirtualClusterScanPolicyParameters) {
	*out = *in
	if in.ConfigurationScanSchedule != nil {
		in, out := &in.ConfigurationScanSchedule, &out.ConfigurationScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.ConformanceScanSchedule != nil {
		in, out := &in.ConformanceScanSchedule, &out.ConformanceScanSchedule
		*out = new(string)
		**out = **in
	}
	if in.PenetrationScanSchedule != nil {
		in, out := &in.PenetrationScanSchedule, &out.PenetrationScanSchedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterScanPolicyParameters.
func (in *VirtualClusterScanPolicyParameters) DeepCopy() *VirtualClusterScanPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterScanPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterSpec) DeepCopyInto(out *VirtualClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterSpec.
func (in *VirtualClusterSpec) DeepCopy() *VirtualClusterSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterStatus) DeepCopyInto(out *VirtualClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterStatus.
func (in *VirtualClusterStatus) DeepCopy() *VirtualClusterStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workspace) DeepCopyInto(out *Workspace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workspace.
func (in *Workspace) DeepCopy() *Workspace {
	if in == nil {
		return nil
	}
	out := new(Workspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workspace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBackupPolicyInitParameters) DeepCopyInto(out *WorkspaceBackupPolicyInitParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBackupPolicyInitParameters.
func (in *WorkspaceBackupPolicyInitParameters) DeepCopy() *WorkspaceBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBackupPolicyObservation) DeepCopyInto(out *WorkspaceBackupPolicyObservation) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBackupPolicyObservation.
func (in *WorkspaceBackupPolicyObservation) DeepCopy() *WorkspaceBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceBackupPolicyParameters) DeepCopyInto(out *WorkspaceBackupPolicyParameters) {
	*out = *in
	if in.BackupLocationID != nil {
		in, out := &in.BackupLocationID, &out.BackupLocationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterUids != nil {
		in, out := &in.ClusterUids, &out.ClusterUids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExpiryInHour != nil {
		in, out := &in.ExpiryInHour, &out.ExpiryInHour
		*out = new(float64)
		**out = **in
	}
	if in.IncludeAllClusters != nil {
		in, out := &in.IncludeAllClusters, &out.IncludeAllClusters
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResources != nil {
		in, out := &in.IncludeClusterResources, &out.IncludeClusterResources
		*out = new(bool)
		**out = **in
	}
	if in.IncludeClusterResourcesMode != nil {
		in, out := &in.IncludeClusterResourcesMode, &out.IncludeClusterResourcesMode
		*out = new(string)
		**out = **in
	}
	if in.IncludeDisks != nil {
		in, out := &in.IncludeDisks, &out.IncludeDisks
		*out = new(bool)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceBackupPolicyParameters.
func (in *WorkspaceBackupPolicyParameters) DeepCopy() *WorkspaceBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceClusterRbacBindingInitParameters) DeepCopyInto(out *WorkspaceClusterRbacBindingInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]WorkspaceClusterRbacBindingSubjectsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceClusterRbacBindingInitParameters.
func (in *WorkspaceClusterRbacBindingInitParameters) DeepCopy() *WorkspaceClusterRbacBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceClusterRbacBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceClusterRbacBindingObservation) DeepCopyInto(out *WorkspaceClusterRbacBindingObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]WorkspaceClusterRbacBindingSubjectsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceClusterRbacBindingObservation.
func (in *WorkspaceClusterRbacBindingObservation) DeepCopy() *WorkspaceClusterRbacBindingObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceClusterRbacBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceClusterRbacBindingParameters) DeepCopyInto(out *WorkspaceClusterRbacBindingParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Subjects != nil {
		in, out := &in.Subjects, &out.Subjects
		*out = make([]WorkspaceClusterRbacBindingSubjectsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceClusterRbacBindingParameters.
func (in *WorkspaceClusterRbacBindingParameters) DeepCopy() *WorkspaceClusterRbacBindingParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceClusterRbacBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceClusterRbacBindingSubjectsInitParameters) DeepCopyInto(out *WorkspaceClusterRbacBindingSubjectsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceClusterRbacBindingSubjectsInitParameters.
func (in *WorkspaceClusterRbacBindingSubjectsInitParameters) DeepCopy() *WorkspaceClusterRbacBindingSubjectsInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceClusterRbacBindingSubjectsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceClusterRbacBindingSubjectsObservation) DeepCopyInto(out *WorkspaceClusterRbacBindingSubjectsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceClusterRbacBindingSubjectsObservation.
func (in *WorkspaceClusterRbacBindingSubjectsObservation) DeepCopy() *WorkspaceClusterRbacBindingSubjectsObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceClusterRbacBindingSubjectsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceClusterRbacBindingSubjectsParameters) DeepCopyInto(out *WorkspaceClusterRbacBindingSubjectsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceClusterRbacBindingSubjectsParameters.
func (in *WorkspaceClusterRbacBindingSubjectsParameters) DeepCopy() *WorkspaceClusterRbacBindingSubjectsParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceClusterRbacBindingSubjectsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceClustersInitParameters) DeepCopyInto(out *WorkspaceClustersInitParameters) {
	*out = *in
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceClustersInitParameters.
func (in *WorkspaceClustersInitParameters) DeepCopy() *WorkspaceClustersInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceClustersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceClustersObservation) DeepCopyInto(out *WorkspaceClustersObservation) {
	*out = *in
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceClustersObservation.
func (in *WorkspaceClustersObservation) DeepCopy() *WorkspaceClustersObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceClustersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceClustersParameters) DeepCopyInto(out *WorkspaceClustersParameters) {
	*out = *in
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceClustersParameters.
func (in *WorkspaceClustersParameters) DeepCopy() *WorkspaceClustersParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceClustersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceInitParameters) DeepCopyInto(out *WorkspaceInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceInitParameters.
func (in *WorkspaceInitParameters) DeepCopy() *WorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceInitParameters_2) DeepCopyInto(out *WorkspaceInitParameters_2) {
	*out = *in
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]WorkspaceBackupPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]WorkspaceClusterRbacBindingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]WorkspaceClustersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]WorkspaceNamespacesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceInitParameters_2.
func (in *WorkspaceInitParameters_2) DeepCopy() *WorkspaceInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(WorkspaceInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceList) DeepCopyInto(out *WorkspaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceList.
func (in *WorkspaceList) DeepCopy() *WorkspaceList {
	if in == nil {
		return nil
	}
	out := new(WorkspaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkspaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceNamespacesInitParameters) DeepCopyInto(out *WorkspaceNamespacesInitParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceNamespacesInitParameters.
func (in *WorkspaceNamespacesInitParameters) DeepCopy() *WorkspaceNamespacesInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceNamespacesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceNamespacesObservation) DeepCopyInto(out *WorkspaceNamespacesObservation) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceNamespacesObservation.
func (in *WorkspaceNamespacesObservation) DeepCopy() *WorkspaceNamespacesObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceNamespacesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceNamespacesParameters) DeepCopyInto(out *WorkspaceNamespacesParameters) {
	*out = *in
	if in.ImagesBlacklist != nil {
		in, out := &in.ImagesBlacklist, &out.ImagesBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceAllocation != nil {
		in, out := &in.ResourceAllocation, &out.ResourceAllocation
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceNamespacesParameters.
func (in *WorkspaceNamespacesParameters) DeepCopy() *WorkspaceNamespacesParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceNamespacesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation_2) DeepCopyInto(out *WorkspaceObservation_2) {
	*out = *in
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]WorkspaceBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]WorkspaceClusterRbacBindingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]WorkspaceClustersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]WorkspaceNamespacesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation_2.
func (in *WorkspaceObservation_2) DeepCopy() *WorkspaceObservation_2 {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters_2) DeepCopyInto(out *WorkspaceParameters_2) {
	*out = *in
	if in.BackupPolicy != nil {
		in, out := &in.BackupPolicy, &out.BackupPolicy
		*out = make([]WorkspaceBackupPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterRbacBinding != nil {
		in, out := &in.ClusterRbacBinding, &out.ClusterRbacBinding
		*out = make([]WorkspaceClusterRbacBindingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]WorkspaceClustersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]WorkspaceNamespacesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters_2.
func (in *WorkspaceParameters_2) DeepCopy() *WorkspaceParameters_2 {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceRoleInitParameters) DeepCopyInto(out *WorkspaceRoleInitParameters) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceRoleWorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceRoleInitParameters.
func (in *WorkspaceRoleInitParameters) DeepCopy() *WorkspaceRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceRoleMappingInitParameters) DeepCopyInto(out *WorkspaceRoleMappingInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceRoleMappingInitParameters.
func (in *WorkspaceRoleMappingInitParameters) DeepCopy() *WorkspaceRoleMappingInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceRoleMappingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceRoleMappingObservation) DeepCopyInto(out *WorkspaceRoleMappingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceRoleMappingObservation.
func (in *WorkspaceRoleMappingObservation) DeepCopy() *WorkspaceRoleMappingObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceRoleMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceRoleMappingParameters) DeepCopyInto(out *WorkspaceRoleMappingParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceRoleMappingParameters.
func (in *WorkspaceRoleMappingParameters) DeepCopy() *WorkspaceRoleMappingParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceRoleMappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceRoleObservation) DeepCopyInto(out *WorkspaceRoleObservation) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceRoleWorkspaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceRoleObservation.
func (in *WorkspaceRoleObservation) DeepCopy() *WorkspaceRoleObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceRoleParameters) DeepCopyInto(out *WorkspaceRoleParameters) {
	*out = *in
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceRoleWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceRoleParameters.
func (in *WorkspaceRoleParameters) DeepCopy() *WorkspaceRoleParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceRoleWorkspaceInitParameters) DeepCopyInto(out *WorkspaceRoleWorkspaceInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RoleIds != nil {
		in, out := &in.RoleIds, &out.RoleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceRoleWorkspaceInitParameters.
func (in *WorkspaceRoleWorkspaceInitParameters) DeepCopy() *WorkspaceRoleWorkspaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceRoleWorkspaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceRoleWorkspaceObservation) DeepCopyInto(out *WorkspaceRoleWorkspaceObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RoleIds != nil {
		in, out := &in.RoleIds, &out.RoleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceRoleWorkspaceObservation.
func (in *WorkspaceRoleWorkspaceObservation) DeepCopy() *WorkspaceRoleWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceRoleWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceRoleWorkspaceParameters) DeepCopyInto(out *WorkspaceRoleWorkspaceParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RoleIds != nil {
		in, out := &in.RoleIds, &out.RoleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceRoleWorkspaceParameters.
func (in *WorkspaceRoleWorkspaceParameters) DeepCopy() *WorkspaceRoleWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceRoleWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceSpec) DeepCopyInto(out *WorkspaceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceSpec.
func (in *WorkspaceSpec) DeepCopy() *WorkspaceSpec {
	if in == nil {
		return nil
	}
	out := new(WorkspaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceStatus) DeepCopyInto(out *WorkspaceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceStatus.
func (in *WorkspaceStatus) DeepCopy() *WorkspaceStatus {
	if in == nil {
		return nil
	}
	out := new(WorkspaceStatus)
	in.DeepCopyInto(out)
	return out
}
